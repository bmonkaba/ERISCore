<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.47.3 (20210619.1520)
 -->
<!-- Title: FsCache Pages: 1 -->
<svg width="220pt" height="2261pt"
 viewBox="0.00 0.00 220.00 2261.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 2257)">
<title>FsCache</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-2257 216,-2257 216,4 -4,4"/>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Sector cache.">
<polygon fill="#bfbfbf" stroke="black" points="0,-0.5 0,-648.5 212,-648.5 212,-0.5 0,-0.5"/>
<text text-anchor="middle" x="106" y="-634.9" font-family="Helvetica,sans-Serif" font-size="12.00">FsCache</text>
<polyline fill="none" stroke="black" points="0,-627.5 212,-627.5 "/>
<text text-anchor="start" x="8" y="-613.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ static const uint8</text>
<text text-anchor="start" x="8" y="-600.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t CACHE_FOR_READ</text>
<text text-anchor="start" x="8" y="-587.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ static const uint8</text>
<text text-anchor="start" x="8" y="-574.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t CACHE_FOR_WRITE</text>
<text text-anchor="start" x="8" y="-561.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ static const uint8</text>
<text text-anchor="start" x="8" y="-548.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t CACHE_OPTION_NO_READ</text>
<text text-anchor="start" x="8" y="-535.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ static const uint8</text>
<text text-anchor="start" x="8" y="-522.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t CACHE_RESERVE_FOR_WRITE</text>
<text text-anchor="start" x="8" y="-509.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ static const uint8</text>
<text text-anchor="start" x="8" y="-496.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t CACHE_STATUS_DIRTY</text>
<text text-anchor="start" x="8" y="-483.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ static const uint8</text>
<text text-anchor="start" x="8" y="-470.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t CACHE_STATUS_MASK</text>
<text text-anchor="start" x="8" y="-457.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ static const uint8</text>
<text text-anchor="start" x="8" y="-444.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t CACHE_STATUS_MIRROR_FAT</text>
<text text-anchor="start" x="8" y="-431.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; uint8_t m_buffer</text>
<text text-anchor="start" x="8" y="-418.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; uint32_t m_mirrorOffset</text>
<text text-anchor="start" x="8" y="-405.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; uint32_t m_sector</text>
<text text-anchor="start" x="8" y="-392.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; uint8_t m_status</text>
<polyline fill="none" stroke="black" points="0,-385.5 212,-385.5 "/>
<text text-anchor="start" x="8" y="-371.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ uint8_t * cacheBuffer()</text>
<text text-anchor="start" x="8" y="-358.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool cacheSafeRead</text>
<text text-anchor="start" x="8" y="-345.9" font-family="Helvetica,sans-Serif" font-size="12.00">(uint32_t sector, uint8</text>
<text text-anchor="start" x="8" y="-332.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t *dst)</text>
<text text-anchor="start" x="8" y="-319.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool cacheSafeRead</text>
<text text-anchor="start" x="8" y="-306.9" font-family="Helvetica,sans-Serif" font-size="12.00">(uint32_t sector, uint8</text>
<text text-anchor="start" x="8" y="-293.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t *dst, size_t count)</text>
<text text-anchor="start" x="8" y="-280.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool cacheSafeWrite</text>
<text text-anchor="start" x="8" y="-267.9" font-family="Helvetica,sans-Serif" font-size="12.00">(uint32_t sector, const</text>
<text text-anchor="start" x="8" y="-254.9" font-family="Helvetica,sans-Serif" font-size="12.00"> uint8_t *src)</text>
<text text-anchor="start" x="8" y="-241.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool cacheSafeWrite</text>
<text text-anchor="start" x="8" y="-228.9" font-family="Helvetica,sans-Serif" font-size="12.00">(uint32_t sector, const</text>
<text text-anchor="start" x="8" y="-215.9" font-family="Helvetica,sans-Serif" font-size="12.00"> uint8_t *src, size_t count)</text>
<text text-anchor="start" x="8" y="-202.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ uint8_t * clear()</text>
<text text-anchor="start" x="8" y="-189.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void dirty()</text>
<text text-anchor="start" x="8" y="-176.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void init(BlockDevice</text>
<text text-anchor="start" x="8" y="-163.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *blockDev)</text>
<text text-anchor="start" x="8" y="-150.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void invalidate()</text>
<text text-anchor="start" x="8" y="-137.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool isCached(uint32</text>
<text text-anchor="start" x="8" y="-124.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t sector) const</text>
<text text-anchor="start" x="8" y="-111.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool isCached(uint32</text>
<text text-anchor="start" x="8" y="-98.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t sector, size_t count)</text>
<text text-anchor="start" x="8" y="-85.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool isDirty()</text>
<text text-anchor="start" x="8" y="-72.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ uint8_t * prepare(uint32</text>
<text text-anchor="start" x="8" y="-59.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t sector, uint8_t option)</text>
<text text-anchor="start" x="8" y="-46.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ uint32_t sector()</text>
<text text-anchor="start" x="8" y="-33.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void setMirrorOffset</text>
<text text-anchor="start" x="8" y="-20.9" font-family="Helvetica,sans-Serif" font-size="12.00">(uint32_t offset)</text>
<text text-anchor="start" x="8" y="-7.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool sync()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../d5/d4b/class_shared_spi_card.html" target="_top" xlink:title="Raw access to SD and SDHC flash memory cards via shared SPI port.">
<polygon fill="white" stroke="black" points="9,-698.5 9,-1970.5 203,-1970.5 203,-698.5 9,-698.5"/>
<text text-anchor="middle" x="106" y="-1956.9" font-family="Helvetica,sans-Serif" font-size="12.00">SharedSpiCard</text>
<polyline fill="none" stroke="black" points="9,-1949.5 203,-1949.5 "/>
<text text-anchor="start" x="17" y="-1935.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ static const uint8</text>
<text text-anchor="start" x="17" y="-1922.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t IDLE_STATE</text>
<text text-anchor="start" x="17" y="-1909.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ static const uint8</text>
<text text-anchor="start" x="17" y="-1896.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t READ_STATE</text>
<text text-anchor="start" x="17" y="-1883.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ static const uint8</text>
<text text-anchor="start" x="17" y="-1870.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t WRITE_STATE</text>
<text text-anchor="start" x="17" y="-1857.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; SdCsPin_t m_csPin</text>
<text text-anchor="start" x="17" y="-1844.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; uint8_t m_errorCode</text>
<text text-anchor="start" x="17" y="-1831.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; bool m_spiActive</text>
<text text-anchor="start" x="17" y="-1818.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; uint8_t m_state</text>
<text text-anchor="start" x="17" y="-1805.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; uint8_t m_status</text>
<text text-anchor="start" x="17" y="-1792.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; uint8_t m_type</text>
<polyline fill="none" stroke="black" points="9,-1785.5 203,-1785.5 "/>
<text text-anchor="start" x="17" y="-1771.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ SharedSpiCard()</text>
<text text-anchor="start" x="17" y="-1758.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ uint32_t __attribute</text>
<text text-anchor="start" x="17" y="-1745.9" font-family="Helvetica,sans-Serif" font-size="12.00">__((error(&quot;use sectorCount</text>
<text text-anchor="start" x="17" y="-1732.9" font-family="Helvetica,sans-Serif" font-size="12.00">()&quot;))) cardSize()</text>
<text text-anchor="start" x="17" y="-1719.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool begin(SdSpiConfig</text>
<text text-anchor="start" x="17" y="-1706.9" font-family="Helvetica,sans-Serif" font-size="12.00"> spiConfig)</text>
<text text-anchor="start" x="17" y="-1693.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool erase(uint32_t</text>
<text text-anchor="start" x="17" y="-1680.9" font-family="Helvetica,sans-Serif" font-size="12.00"> firstSector, uint32</text>
<text text-anchor="start" x="17" y="-1667.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t lastSector)</text>
<text text-anchor="start" x="17" y="-1654.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool eraseSingleSectorEnable()</text>
<text text-anchor="start" x="17" y="-1641.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void error(uint8_t</text>
<text text-anchor="start" x="17" y="-1628.9" font-family="Helvetica,sans-Serif" font-size="12.00"> code)</text>
<text text-anchor="start" x="17" y="-1615.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ uint8_t errorCode()</text>
<text text-anchor="start" x="17" y="-1602.9" font-family="Helvetica,sans-Serif" font-size="12.00"> const</text>
<text text-anchor="start" x="17" y="-1589.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ uint32_t errorData</text>
<text text-anchor="start" x="17" y="-1576.9" font-family="Helvetica,sans-Serif" font-size="12.00">() const</text>
<text text-anchor="start" x="17" y="-1563.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool isBusy()</text>
<text text-anchor="start" x="17" y="-1550.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool readCID(cid_t</text>
<text text-anchor="start" x="17" y="-1537.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *cid)</text>
<text text-anchor="start" x="17" y="-1524.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool readCSD(csd_t</text>
<text text-anchor="start" x="17" y="-1511.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *csd)</text>
<text text-anchor="start" x="17" y="-1498.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool readData(uint8</text>
<text text-anchor="start" x="17" y="-1485.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t *dst)</text>
<text text-anchor="start" x="17" y="-1472.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool readOCR(uint32</text>
<text text-anchor="start" x="17" y="-1459.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t *ocr)</text>
<text text-anchor="start" x="17" y="-1446.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool readSector(uint32</text>
<text text-anchor="start" x="17" y="-1433.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t sector, uint8_t *dst)</text>
<text text-anchor="start" x="17" y="-1420.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool readSectors(uint32</text>
<text text-anchor="start" x="17" y="-1407.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t sector, uint8_t *dst,</text>
<text text-anchor="start" x="17" y="-1394.9" font-family="Helvetica,sans-Serif" font-size="12.00"> size_t ns)</text>
<text text-anchor="start" x="17" y="-1381.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool readStart(uint32</text>
<text text-anchor="start" x="17" y="-1368.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t sector)</text>
<text text-anchor="start" x="17" y="-1355.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool readStatus(uint8</text>
<text text-anchor="start" x="17" y="-1342.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t *status)</text>
<text text-anchor="start" x="17" y="-1329.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool readStop()</text>
<text text-anchor="start" x="17" y="-1316.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ uint8_t sdState()</text>
<text text-anchor="start" x="17" y="-1303.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ uint32_t sectorCount()</text>
<text text-anchor="start" x="17" y="-1290.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool stopTransfer()</text>
<text text-anchor="start" x="17" y="-1277.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool syncDevice()</text>
<text text-anchor="start" x="17" y="-1264.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ uint8_t type() const</text>
<text text-anchor="start" x="17" y="-1251.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool writeData(const</text>
<text text-anchor="start" x="17" y="-1238.9" font-family="Helvetica,sans-Serif" font-size="12.00"> uint8_t *src)</text>
<text text-anchor="start" x="17" y="-1225.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool writeSector(uint32</text>
<text text-anchor="start" x="17" y="-1212.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t sector, const uint8</text>
<text text-anchor="start" x="17" y="-1199.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t *src)</text>
<text text-anchor="start" x="17" y="-1186.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool writeSectors(uint32</text>
<text text-anchor="start" x="17" y="-1173.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t sector, const uint8</text>
<text text-anchor="start" x="17" y="-1160.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t *src, size_t ns)</text>
<text text-anchor="start" x="17" y="-1147.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool writeStart(uint32</text>
<text text-anchor="start" x="17" y="-1134.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t sector)</text>
<text text-anchor="start" x="17" y="-1121.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool writeStop()</text>
<text text-anchor="start" x="17" y="-1108.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; uint8_t cardAcmd(uint8</text>
<text text-anchor="start" x="17" y="-1095.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t cmd, uint32_t arg)</text>
<text text-anchor="start" x="17" y="-1082.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; uint8_t cardCommand</text>
<text text-anchor="start" x="17" y="-1069.9" font-family="Helvetica,sans-Serif" font-size="12.00">(uint8_t cmd, uint32</text>
<text text-anchor="start" x="17" y="-1056.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t arg)</text>
<text text-anchor="start" x="17" y="-1043.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; bool readData(uint8</text>
<text text-anchor="start" x="17" y="-1030.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t *dst, size_t count)</text>
<text text-anchor="start" x="17" y="-1017.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; bool readRegister(uint8</text>
<text text-anchor="start" x="17" y="-1004.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t cmd, void *buf)</text>
<text text-anchor="start" x="17" y="-991.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void spiActivate()</text>
<text text-anchor="start" x="17" y="-978.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void spiBegin(SdSpiConfig</text>
<text text-anchor="start" x="17" y="-965.9" font-family="Helvetica,sans-Serif" font-size="12.00"> spiConfig)</text>
<text text-anchor="start" x="17" y="-952.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void spiDeactivate()</text>
<text text-anchor="start" x="17" y="-939.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; uint8_t spiReceive()</text>
<text text-anchor="start" x="17" y="-926.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; uint8_t spiReceive</text>
<text text-anchor="start" x="17" y="-913.9" font-family="Helvetica,sans-Serif" font-size="12.00">(uint8_t *buf, size_t n)</text>
<text text-anchor="start" x="17" y="-900.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void spiSelect()</text>
<text text-anchor="start" x="17" y="-887.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void spiSend(const</text>
<text text-anchor="start" x="17" y="-874.9" font-family="Helvetica,sans-Serif" font-size="12.00"> uint8_t *buf, size_t n)</text>
<text text-anchor="start" x="17" y="-861.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void spiSend(uint8</text>
<text text-anchor="start" x="17" y="-848.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t data)</text>
<text text-anchor="start" x="17" y="-835.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void spiSetSckSpeed</text>
<text text-anchor="start" x="17" y="-822.9" font-family="Helvetica,sans-Serif" font-size="12.00">(uint32_t maxSck)</text>
<text text-anchor="start" x="17" y="-809.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void spiStart()</text>
<text text-anchor="start" x="17" y="-796.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void spiStop()</text>
<text text-anchor="start" x="17" y="-783.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void spiUnselect()</text>
<text text-anchor="start" x="17" y="-770.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void type(uint8_t value)</text>
<text text-anchor="start" x="17" y="-757.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; bool waitReady(uint16</text>
<text text-anchor="start" x="17" y="-744.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t ms)</text>
<text text-anchor="start" x="17" y="-731.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; bool writeData(uint8</text>
<text text-anchor="start" x="17" y="-718.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t token, const uint8</text>
<text text-anchor="start" x="17" y="-705.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t *src)</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M106,-698.34C106,-685.72 106,-673.22 106,-660.88"/>
<polygon fill="none" stroke="#404040" points="106,-660.59 102,-654.59 106,-648.59 110,-654.59 106,-660.59"/>
<text text-anchor="middle" x="142.5" y="-670.4" font-family="Helvetica,sans-Serif" font-size="12.00"> &#45;m_blockDev</text>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../dc/da1/class_sd_spi_arduino_driver.html" target="_top" xlink:title="Optimized SPI class for access to SD and SDHC flash memory cards.">
<polygon fill="white" stroke="black" points="24.5,-2020.5 24.5,-2252.5 187.5,-2252.5 187.5,-2020.5 24.5,-2020.5"/>
<text text-anchor="middle" x="106" y="-2238.9" font-family="Helvetica,sans-Serif" font-size="12.00">SdSpiArduinoDriver</text>
<polyline fill="none" stroke="black" points="24.5,-2231.5 187.5,-2231.5 "/>
<text text-anchor="start" x="32.5" y="-2217.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; SPIClass * m_spi</text>
<text text-anchor="start" x="32.5" y="-2204.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; SPISettings m_spiSettings</text>
<polyline fill="none" stroke="black" points="24.5,-2197.5 187.5,-2197.5 "/>
<text text-anchor="start" x="32.5" y="-2183.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void activate()</text>
<text text-anchor="start" x="32.5" y="-2170.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void begin(SdSpiConfig</text>
<text text-anchor="start" x="32.5" y="-2157.9" font-family="Helvetica,sans-Serif" font-size="12.00"> spiConfig)</text>
<text text-anchor="start" x="32.5" y="-2144.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void deactivate()</text>
<text text-anchor="start" x="32.5" y="-2131.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void end()</text>
<text text-anchor="start" x="32.5" y="-2118.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ uint8_t receive()</text>
<text text-anchor="start" x="32.5" y="-2105.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ uint8_t receive(uint8</text>
<text text-anchor="start" x="32.5" y="-2092.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t *buf, size_t count)</text>
<text text-anchor="start" x="32.5" y="-2079.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void send(const uint8</text>
<text text-anchor="start" x="32.5" y="-2066.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t *buf, size_t count)</text>
<text text-anchor="start" x="32.5" y="-2053.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void send(uint8_t data)</text>
<text text-anchor="start" x="32.5" y="-2040.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void setSckSpeed(uint32</text>
<text text-anchor="start" x="32.5" y="-2027.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t maxSck)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M106,-2020.45C106,-2008.62 106,-1996.09 106,-1982.98"/>
<polygon fill="none" stroke="#404040" points="106,-1982.78 102,-1976.78 106,-1970.78 110,-1976.78 106,-1982.78"/>
<text text-anchor="middle" x="141.5" y="-1992.4" font-family="Helvetica,sans-Serif" font-size="12.00"> &#45;m_spiDriver</text>
</g>
</g>
</svg>
