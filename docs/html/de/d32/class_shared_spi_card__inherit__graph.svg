<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.47.3 (20210619.1520)
 -->
<!-- Title: SharedSpiCard Pages: 1 -->
<!--zoomable 1576 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 202;
var viewHeight = 1576;
var sectionId = 'dynsection-0';
</script>
<script xlink:href="../../svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>SharedSpiCard</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-1572 198,-1572 198,4 -4,4"/>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Raw access to SD and SDHC flash memory cards via shared SPI port.">
<polygon fill="#bfbfbf" stroke="black" points="0,-282.5 0,-1567.5 194,-1567.5 194,-282.5 0,-282.5"/>
<text text-anchor="middle" x="97" y="-1553.9" font-family="Helvetica,sans-Serif" font-size="12.00">SharedSpiCard</text>
<polyline fill="none" stroke="black" points="0,-1546.5 194,-1546.5 "/>
<text text-anchor="start" x="8" y="-1532.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ static const uint8</text>
<text text-anchor="start" x="8" y="-1519.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t IDLE_STATE</text>
<text text-anchor="start" x="8" y="-1506.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ static const uint8</text>
<text text-anchor="start" x="8" y="-1493.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t READ_STATE</text>
<text text-anchor="start" x="8" y="-1480.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ static const uint8</text>
<text text-anchor="start" x="8" y="-1467.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t WRITE_STATE</text>
<text text-anchor="start" x="8" y="-1454.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; SdCsPin_t m_csPin</text>
<text text-anchor="start" x="8" y="-1441.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; uint8_t m_errorCode</text>
<text text-anchor="start" x="8" y="-1428.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; bool m_spiActive</text>
<text text-anchor="start" x="8" y="-1415.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; SdSpiDriver m_spiDriver</text>
<text text-anchor="start" x="8" y="-1402.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; uint8_t m_state</text>
<text text-anchor="start" x="8" y="-1389.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; uint8_t m_status</text>
<text text-anchor="start" x="8" y="-1376.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; uint8_t m_type</text>
<polyline fill="none" stroke="black" points="0,-1369.5 194,-1369.5 "/>
<text text-anchor="start" x="8" y="-1355.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ SharedSpiCard()</text>
<text text-anchor="start" x="8" y="-1342.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ uint32_t __attribute</text>
<text text-anchor="start" x="8" y="-1329.9" font-family="Helvetica,sans-Serif" font-size="12.00">__((error(&quot;use sectorCount</text>
<text text-anchor="start" x="8" y="-1316.9" font-family="Helvetica,sans-Serif" font-size="12.00">()&quot;))) cardSize()</text>
<text text-anchor="start" x="8" y="-1303.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool begin(SdSpiConfig</text>
<text text-anchor="start" x="8" y="-1290.9" font-family="Helvetica,sans-Serif" font-size="12.00"> spiConfig)</text>
<text text-anchor="start" x="8" y="-1277.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool erase(uint32_t</text>
<text text-anchor="start" x="8" y="-1264.9" font-family="Helvetica,sans-Serif" font-size="12.00"> firstSector, uint32</text>
<text text-anchor="start" x="8" y="-1251.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t lastSector)</text>
<text text-anchor="start" x="8" y="-1238.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool eraseSingleSectorEnable()</text>
<text text-anchor="start" x="8" y="-1225.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void error(uint8_t</text>
<text text-anchor="start" x="8" y="-1212.9" font-family="Helvetica,sans-Serif" font-size="12.00"> code)</text>
<text text-anchor="start" x="8" y="-1199.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ uint8_t errorCode()</text>
<text text-anchor="start" x="8" y="-1186.9" font-family="Helvetica,sans-Serif" font-size="12.00"> const</text>
<text text-anchor="start" x="8" y="-1173.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ uint32_t errorData</text>
<text text-anchor="start" x="8" y="-1160.9" font-family="Helvetica,sans-Serif" font-size="12.00">() const</text>
<text text-anchor="start" x="8" y="-1147.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool isBusy()</text>
<text text-anchor="start" x="8" y="-1134.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool readCID(cid_t</text>
<text text-anchor="start" x="8" y="-1121.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *cid)</text>
<text text-anchor="start" x="8" y="-1108.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool readCSD(csd_t</text>
<text text-anchor="start" x="8" y="-1095.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *csd)</text>
<text text-anchor="start" x="8" y="-1082.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool readData(uint8</text>
<text text-anchor="start" x="8" y="-1069.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t *dst)</text>
<text text-anchor="start" x="8" y="-1056.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool readOCR(uint32</text>
<text text-anchor="start" x="8" y="-1043.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t *ocr)</text>
<text text-anchor="start" x="8" y="-1030.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool readSector(uint32</text>
<text text-anchor="start" x="8" y="-1017.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t sector, uint8_t *dst)</text>
<text text-anchor="start" x="8" y="-1004.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool readSectors(uint32</text>
<text text-anchor="start" x="8" y="-991.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t sector, uint8_t *dst,</text>
<text text-anchor="start" x="8" y="-978.9" font-family="Helvetica,sans-Serif" font-size="12.00"> size_t ns)</text>
<text text-anchor="start" x="8" y="-965.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool readStart(uint32</text>
<text text-anchor="start" x="8" y="-952.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t sector)</text>
<text text-anchor="start" x="8" y="-939.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool readStatus(uint8</text>
<text text-anchor="start" x="8" y="-926.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t *status)</text>
<text text-anchor="start" x="8" y="-913.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool readStop()</text>
<text text-anchor="start" x="8" y="-900.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ uint8_t sdState()</text>
<text text-anchor="start" x="8" y="-887.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ uint32_t sectorCount()</text>
<text text-anchor="start" x="8" y="-874.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool stopTransfer()</text>
<text text-anchor="start" x="8" y="-861.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool syncDevice()</text>
<text text-anchor="start" x="8" y="-848.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ uint8_t type() const</text>
<text text-anchor="start" x="8" y="-835.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool writeData(const</text>
<text text-anchor="start" x="8" y="-822.9" font-family="Helvetica,sans-Serif" font-size="12.00"> uint8_t *src)</text>
<text text-anchor="start" x="8" y="-809.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool writeSector(uint32</text>
<text text-anchor="start" x="8" y="-796.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t sector, const uint8</text>
<text text-anchor="start" x="8" y="-783.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t *src)</text>
<text text-anchor="start" x="8" y="-770.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool writeSectors(uint32</text>
<text text-anchor="start" x="8" y="-757.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t sector, const uint8</text>
<text text-anchor="start" x="8" y="-744.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t *src, size_t ns)</text>
<text text-anchor="start" x="8" y="-731.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool writeStart(uint32</text>
<text text-anchor="start" x="8" y="-718.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t sector)</text>
<text text-anchor="start" x="8" y="-705.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool writeStop()</text>
<text text-anchor="start" x="8" y="-692.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; uint8_t cardAcmd(uint8</text>
<text text-anchor="start" x="8" y="-679.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t cmd, uint32_t arg)</text>
<text text-anchor="start" x="8" y="-666.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; uint8_t cardCommand</text>
<text text-anchor="start" x="8" y="-653.9" font-family="Helvetica,sans-Serif" font-size="12.00">(uint8_t cmd, uint32</text>
<text text-anchor="start" x="8" y="-640.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t arg)</text>
<text text-anchor="start" x="8" y="-627.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; bool readData(uint8</text>
<text text-anchor="start" x="8" y="-614.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t *dst, size_t count)</text>
<text text-anchor="start" x="8" y="-601.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; bool readRegister(uint8</text>
<text text-anchor="start" x="8" y="-588.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t cmd, void *buf)</text>
<text text-anchor="start" x="8" y="-575.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void spiActivate()</text>
<text text-anchor="start" x="8" y="-562.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void spiBegin(SdSpiConfig</text>
<text text-anchor="start" x="8" y="-549.9" font-family="Helvetica,sans-Serif" font-size="12.00"> spiConfig)</text>
<text text-anchor="start" x="8" y="-536.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void spiDeactivate()</text>
<text text-anchor="start" x="8" y="-523.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; uint8_t spiReceive()</text>
<text text-anchor="start" x="8" y="-510.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; uint8_t spiReceive</text>
<text text-anchor="start" x="8" y="-497.9" font-family="Helvetica,sans-Serif" font-size="12.00">(uint8_t *buf, size_t n)</text>
<text text-anchor="start" x="8" y="-484.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void spiSelect()</text>
<text text-anchor="start" x="8" y="-471.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void spiSend(const</text>
<text text-anchor="start" x="8" y="-458.9" font-family="Helvetica,sans-Serif" font-size="12.00"> uint8_t *buf, size_t n)</text>
<text text-anchor="start" x="8" y="-445.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void spiSend(uint8</text>
<text text-anchor="start" x="8" y="-432.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t data)</text>
<text text-anchor="start" x="8" y="-419.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void spiSetSckSpeed</text>
<text text-anchor="start" x="8" y="-406.9" font-family="Helvetica,sans-Serif" font-size="12.00">(uint32_t maxSck)</text>
<text text-anchor="start" x="8" y="-393.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void spiStart()</text>
<text text-anchor="start" x="8" y="-380.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void spiStop()</text>
<text text-anchor="start" x="8" y="-367.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void spiUnselect()</text>
<text text-anchor="start" x="8" y="-354.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void type(uint8_t value)</text>
<text text-anchor="start" x="8" y="-341.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; bool waitReady(uint16</text>
<text text-anchor="start" x="8" y="-328.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t ms)</text>
<text text-anchor="start" x="8" y="-315.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; bool writeData(uint8</text>
<text text-anchor="start" x="8" y="-302.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t token, const uint8</text>
<text text-anchor="start" x="8" y="-289.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t *src)</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../db/d21/class_dedicated_spi_card.html" target="_top" xlink:title="Raw access to SD and SDHC flash memory cards via dedicate SPI port.">
<polygon fill="white" stroke="black" points="21,-0.5 21,-245.5 173,-245.5 173,-0.5 21,-0.5"/>
<text text-anchor="middle" x="97" y="-231.9" font-family="Helvetica,sans-Serif" font-size="12.00">DedicatedSpiCard</text>
<polyline fill="none" stroke="black" points="21,-224.5 173,-224.5 "/>
<text text-anchor="start" x="29" y="-210.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; uint32_t m_curSector</text>
<text text-anchor="start" x="29" y="-197.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; bool m_sharedSpi</text>
<polyline fill="none" stroke="black" points="21,-190.5 173,-190.5 "/>
<text text-anchor="start" x="29" y="-176.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ DedicatedSpiCard()</text>
<text text-anchor="start" x="29" y="-163.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool begin(SdSpiConfig</text>
<text text-anchor="start" x="29" y="-150.9" font-family="Helvetica,sans-Serif" font-size="12.00"> spiConfig)</text>
<text text-anchor="start" x="29" y="-137.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool readSector(uint32</text>
<text text-anchor="start" x="29" y="-124.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t sector, uint8_t *dst)</text>
<text text-anchor="start" x="29" y="-111.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool readSectors(uint32</text>
<text text-anchor="start" x="29" y="-98.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t sector, uint8_t *dst,</text>
<text text-anchor="start" x="29" y="-85.9" font-family="Helvetica,sans-Serif" font-size="12.00"> size_t ns)</text>
<text text-anchor="start" x="29" y="-72.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool writeSector(uint32</text>
<text text-anchor="start" x="29" y="-59.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t sector, const uint8</text>
<text text-anchor="start" x="29" y="-46.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t *src)</text>
<text text-anchor="start" x="29" y="-33.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool writeSectors(uint32</text>
<text text-anchor="start" x="29" y="-20.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t sector, const uint8</text>
<text text-anchor="start" x="29" y="-7.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t *src, size_t ns)</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node2 -->
<g id="edge1" class="edge">
<title>Node1&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M97,-272.03C97,-262.91 97,-254.07 97,-245.57"/>
<polygon fill="none" stroke="midnightblue" points="93.5,-272.05 97,-282.05 100.5,-272.05 93.5,-272.05"/>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="class_shared_spi_card__inherit__graph_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
