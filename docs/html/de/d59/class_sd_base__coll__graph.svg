<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.47.3 (20210619.1520)
 -->
<!-- Title: SdBase&lt; Vol &gt; Pages: 1 -->
<!--zoomable 2387 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 377;
var viewHeight = 2387;
var sectionId = 'dynsection-1';
</script>
<script xlink:href="../../svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>SdBase&lt; Vol &gt;</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-2383 372.5,-2383 372.5,4 -4,4"/>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="base SD file system template class.">
<polygon fill="#bfbfbf" stroke="black" points="0,-0.5 0,-622.5 212,-622.5 212,-0.5 0,-0.5"/>
<text text-anchor="middle" x="106" y="-608.9" font-family="Helvetica,sans-Serif" font-size="12.00">SdBase&lt; Vol &gt;</text>
<polyline fill="none" stroke="black" points="0,-601.5 212,-601.5 "/>
<text text-anchor="middle" x="106" y="-587.9" font-family="Helvetica,sans-Serif" font-size="12.00"> </text>
<polyline fill="none" stroke="black" points="0,-580.5 212,-580.5 "/>
<text text-anchor="start" x="8" y="-566.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool begin(SdCsPin</text>
<text text-anchor="start" x="8" y="-553.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t csPin, uint32_t maxSck)</text>
<text text-anchor="start" x="8" y="-540.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool begin(SdCsPin</text>
<text text-anchor="start" x="8" y="-527.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t csPin=SS)</text>
<text text-anchor="start" x="8" y="-514.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool begin(SdioConfig</text>
<text text-anchor="start" x="8" y="-501.9" font-family="Helvetica,sans-Serif" font-size="12.00"> sdioConfig)</text>
<text text-anchor="start" x="8" y="-488.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool begin(SdSpiConfig</text>
<text text-anchor="start" x="8" y="-475.9" font-family="Helvetica,sans-Serif" font-size="12.00"> spiConfig)</text>
<text text-anchor="start" x="8" y="-462.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ SdCard * card()</text>
<text text-anchor="start" x="8" y="-449.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool cardBegin(SdioConfig</text>
<text text-anchor="start" x="8" y="-436.9" font-family="Helvetica,sans-Serif" font-size="12.00"> sdioConfig)</text>
<text text-anchor="start" x="8" y="-423.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool cardBegin(SdSpiConfig</text>
<text text-anchor="start" x="8" y="-410.9" font-family="Helvetica,sans-Serif" font-size="12.00"> spiConfig)</text>
<text text-anchor="start" x="8" y="-397.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void errorHalt(print</text>
<text text-anchor="start" x="8" y="-384.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t *pr)</text>
<text text-anchor="start" x="8" y="-371.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void errorHalt(print</text>
<text text-anchor="start" x="8" y="-358.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t *pr, const __FlashString</text>
<text text-anchor="start" x="8" y="-345.9" font-family="Helvetica,sans-Serif" font-size="12.00">Helper *msg)</text>
<text text-anchor="start" x="8" y="-332.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void errorHalt(print</text>
<text text-anchor="start" x="8" y="-319.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t *pr, const char *msg)</text>
<text text-anchor="start" x="8" y="-306.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void errorPrint(Print</text>
<text text-anchor="start" x="8" y="-293.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *pr, const __FlashStringHelper *msg)</text>
<text text-anchor="start" x="8" y="-280.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void errorPrint(print</text>
<text text-anchor="start" x="8" y="-267.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t *pr)</text>
<text text-anchor="start" x="8" y="-254.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void errorPrint(print</text>
<text text-anchor="start" x="8" y="-241.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t *pr, char const *msg)</text>
<text text-anchor="start" x="8" y="-228.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void initErrorHalt</text>
<text text-anchor="start" x="8" y="-215.9" font-family="Helvetica,sans-Serif" font-size="12.00">(Print *pr, const _</text>
<text text-anchor="start" x="8" y="-202.9" font-family="Helvetica,sans-Serif" font-size="12.00">_FlashStringHelper *msg)</text>
<text text-anchor="start" x="8" y="-189.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void initErrorHalt</text>
<text text-anchor="start" x="8" y="-176.9" font-family="Helvetica,sans-Serif" font-size="12.00">(print_t *pr)</text>
<text text-anchor="start" x="8" y="-163.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void initErrorHalt</text>
<text text-anchor="start" x="8" y="-150.9" font-family="Helvetica,sans-Serif" font-size="12.00">(print_t *pr, const</text>
<text text-anchor="start" x="8" y="-137.9" font-family="Helvetica,sans-Serif" font-size="12.00"> char *msg)</text>
<text text-anchor="start" x="8" y="-124.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void initErrorPrint</text>
<text text-anchor="start" x="8" y="-111.9" font-family="Helvetica,sans-Serif" font-size="12.00">(Print *pr)</text>
<text text-anchor="start" x="8" y="-98.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void printFatType(print</text>
<text text-anchor="start" x="8" y="-85.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t *pr)</text>
<text text-anchor="start" x="8" y="-72.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void printSdError(print</text>
<text text-anchor="start" x="8" y="-59.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t *pr)</text>
<text text-anchor="start" x="8" y="-46.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ uint8_t sdErrorCode()</text>
<text text-anchor="start" x="8" y="-33.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ uint8_t sdErrorData()</text>
<text text-anchor="start" x="8" y="-20.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ Vol * vol()</text>
<text text-anchor="start" x="8" y="-7.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool volumeBegin()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:title=" ">
<polygon fill="white" stroke="#bfbfbf" points="36,-692 36,-755 70,-755 70,-692 36,-692"/>
<text text-anchor="middle" x="53" y="-741.4" font-family="Helvetica,sans-Serif" font-size="12.00">Vol</text>
<polyline fill="none" stroke="#bfbfbf" points="36,-734 70,-734 "/>
<text text-anchor="middle" x="53" y="-720.4" font-family="Helvetica,sans-Serif" font-size="12.00"> </text>
<polyline fill="none" stroke="#bfbfbf" points="36,-713 70,-713 "/>
<text text-anchor="middle" x="53" y="-699.4" font-family="Helvetica,sans-Serif" font-size="12.00"> </text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M58.29,-681.59C60.39,-665.34 63,-645.13 65.91,-622.59"/>
<polygon fill="none" stroke="midnightblue" points="54.79,-681.32 56.98,-691.68 61.74,-682.21 54.79,-681.32"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../d5/d4b/class_shared_spi_card.html" target="_top" xlink:title="Raw access to SD and SDHC flash memory cards via shared SPI port.">
<polygon fill="white" stroke="black" points="25,-824.5 25,-2096.5 219,-2096.5 219,-824.5 25,-824.5"/>
<text text-anchor="middle" x="122" y="-2082.9" font-family="Helvetica,sans-Serif" font-size="12.00">SharedSpiCard</text>
<polyline fill="none" stroke="black" points="25,-2075.5 219,-2075.5 "/>
<text text-anchor="start" x="33" y="-2061.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ static const uint8</text>
<text text-anchor="start" x="33" y="-2048.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t IDLE_STATE</text>
<text text-anchor="start" x="33" y="-2035.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ static const uint8</text>
<text text-anchor="start" x="33" y="-2022.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t READ_STATE</text>
<text text-anchor="start" x="33" y="-2009.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ static const uint8</text>
<text text-anchor="start" x="33" y="-1996.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t WRITE_STATE</text>
<text text-anchor="start" x="33" y="-1983.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; SdCsPin_t m_csPin</text>
<text text-anchor="start" x="33" y="-1970.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; uint8_t m_errorCode</text>
<text text-anchor="start" x="33" y="-1957.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; bool m_spiActive</text>
<text text-anchor="start" x="33" y="-1944.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; uint8_t m_state</text>
<text text-anchor="start" x="33" y="-1931.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; uint8_t m_status</text>
<text text-anchor="start" x="33" y="-1918.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; uint8_t m_type</text>
<polyline fill="none" stroke="black" points="25,-1911.5 219,-1911.5 "/>
<text text-anchor="start" x="33" y="-1897.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ SharedSpiCard()</text>
<text text-anchor="start" x="33" y="-1884.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ uint32_t __attribute</text>
<text text-anchor="start" x="33" y="-1871.9" font-family="Helvetica,sans-Serif" font-size="12.00">__((error(&quot;use sectorCount</text>
<text text-anchor="start" x="33" y="-1858.9" font-family="Helvetica,sans-Serif" font-size="12.00">()&quot;))) cardSize()</text>
<text text-anchor="start" x="33" y="-1845.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool begin(SdSpiConfig</text>
<text text-anchor="start" x="33" y="-1832.9" font-family="Helvetica,sans-Serif" font-size="12.00"> spiConfig)</text>
<text text-anchor="start" x="33" y="-1819.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool erase(uint32_t</text>
<text text-anchor="start" x="33" y="-1806.9" font-family="Helvetica,sans-Serif" font-size="12.00"> firstSector, uint32</text>
<text text-anchor="start" x="33" y="-1793.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t lastSector)</text>
<text text-anchor="start" x="33" y="-1780.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool eraseSingleSectorEnable()</text>
<text text-anchor="start" x="33" y="-1767.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void error(uint8_t</text>
<text text-anchor="start" x="33" y="-1754.9" font-family="Helvetica,sans-Serif" font-size="12.00"> code)</text>
<text text-anchor="start" x="33" y="-1741.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ uint8_t errorCode()</text>
<text text-anchor="start" x="33" y="-1728.9" font-family="Helvetica,sans-Serif" font-size="12.00"> const</text>
<text text-anchor="start" x="33" y="-1715.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ uint32_t errorData</text>
<text text-anchor="start" x="33" y="-1702.9" font-family="Helvetica,sans-Serif" font-size="12.00">() const</text>
<text text-anchor="start" x="33" y="-1689.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool isBusy()</text>
<text text-anchor="start" x="33" y="-1676.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool readCID(cid_t</text>
<text text-anchor="start" x="33" y="-1663.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *cid)</text>
<text text-anchor="start" x="33" y="-1650.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool readCSD(csd_t</text>
<text text-anchor="start" x="33" y="-1637.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *csd)</text>
<text text-anchor="start" x="33" y="-1624.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool readData(uint8</text>
<text text-anchor="start" x="33" y="-1611.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t *dst)</text>
<text text-anchor="start" x="33" y="-1598.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool readOCR(uint32</text>
<text text-anchor="start" x="33" y="-1585.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t *ocr)</text>
<text text-anchor="start" x="33" y="-1572.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool readSector(uint32</text>
<text text-anchor="start" x="33" y="-1559.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t sector, uint8_t *dst)</text>
<text text-anchor="start" x="33" y="-1546.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool readSectors(uint32</text>
<text text-anchor="start" x="33" y="-1533.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t sector, uint8_t *dst,</text>
<text text-anchor="start" x="33" y="-1520.9" font-family="Helvetica,sans-Serif" font-size="12.00"> size_t ns)</text>
<text text-anchor="start" x="33" y="-1507.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool readStart(uint32</text>
<text text-anchor="start" x="33" y="-1494.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t sector)</text>
<text text-anchor="start" x="33" y="-1481.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool readStatus(uint8</text>
<text text-anchor="start" x="33" y="-1468.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t *status)</text>
<text text-anchor="start" x="33" y="-1455.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool readStop()</text>
<text text-anchor="start" x="33" y="-1442.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ uint8_t sdState()</text>
<text text-anchor="start" x="33" y="-1429.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ uint32_t sectorCount()</text>
<text text-anchor="start" x="33" y="-1416.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool stopTransfer()</text>
<text text-anchor="start" x="33" y="-1403.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool syncDevice()</text>
<text text-anchor="start" x="33" y="-1390.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ uint8_t type() const</text>
<text text-anchor="start" x="33" y="-1377.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool writeData(const</text>
<text text-anchor="start" x="33" y="-1364.9" font-family="Helvetica,sans-Serif" font-size="12.00"> uint8_t *src)</text>
<text text-anchor="start" x="33" y="-1351.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool writeSector(uint32</text>
<text text-anchor="start" x="33" y="-1338.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t sector, const uint8</text>
<text text-anchor="start" x="33" y="-1325.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t *src)</text>
<text text-anchor="start" x="33" y="-1312.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool writeSectors(uint32</text>
<text text-anchor="start" x="33" y="-1299.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t sector, const uint8</text>
<text text-anchor="start" x="33" y="-1286.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t *src, size_t ns)</text>
<text text-anchor="start" x="33" y="-1273.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool writeStart(uint32</text>
<text text-anchor="start" x="33" y="-1260.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t sector)</text>
<text text-anchor="start" x="33" y="-1247.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool writeStop()</text>
<text text-anchor="start" x="33" y="-1234.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; uint8_t cardAcmd(uint8</text>
<text text-anchor="start" x="33" y="-1221.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t cmd, uint32_t arg)</text>
<text text-anchor="start" x="33" y="-1208.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; uint8_t cardCommand</text>
<text text-anchor="start" x="33" y="-1195.9" font-family="Helvetica,sans-Serif" font-size="12.00">(uint8_t cmd, uint32</text>
<text text-anchor="start" x="33" y="-1182.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t arg)</text>
<text text-anchor="start" x="33" y="-1169.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; bool readData(uint8</text>
<text text-anchor="start" x="33" y="-1156.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t *dst, size_t count)</text>
<text text-anchor="start" x="33" y="-1143.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; bool readRegister(uint8</text>
<text text-anchor="start" x="33" y="-1130.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t cmd, void *buf)</text>
<text text-anchor="start" x="33" y="-1117.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void spiActivate()</text>
<text text-anchor="start" x="33" y="-1104.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void spiBegin(SdSpiConfig</text>
<text text-anchor="start" x="33" y="-1091.9" font-family="Helvetica,sans-Serif" font-size="12.00"> spiConfig)</text>
<text text-anchor="start" x="33" y="-1078.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void spiDeactivate()</text>
<text text-anchor="start" x="33" y="-1065.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; uint8_t spiReceive()</text>
<text text-anchor="start" x="33" y="-1052.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; uint8_t spiReceive</text>
<text text-anchor="start" x="33" y="-1039.9" font-family="Helvetica,sans-Serif" font-size="12.00">(uint8_t *buf, size_t n)</text>
<text text-anchor="start" x="33" y="-1026.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void spiSelect()</text>
<text text-anchor="start" x="33" y="-1013.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void spiSend(const</text>
<text text-anchor="start" x="33" y="-1000.9" font-family="Helvetica,sans-Serif" font-size="12.00"> uint8_t *buf, size_t n)</text>
<text text-anchor="start" x="33" y="-987.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void spiSend(uint8</text>
<text text-anchor="start" x="33" y="-974.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t data)</text>
<text text-anchor="start" x="33" y="-961.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void spiSetSckSpeed</text>
<text text-anchor="start" x="33" y="-948.9" font-family="Helvetica,sans-Serif" font-size="12.00">(uint32_t maxSck)</text>
<text text-anchor="start" x="33" y="-935.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void spiStart()</text>
<text text-anchor="start" x="33" y="-922.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void spiStop()</text>
<text text-anchor="start" x="33" y="-909.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void spiUnselect()</text>
<text text-anchor="start" x="33" y="-896.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void type(uint8_t value)</text>
<text text-anchor="start" x="33" y="-883.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; bool waitReady(uint16</text>
<text text-anchor="start" x="33" y="-870.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t ms)</text>
<text text-anchor="start" x="33" y="-857.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; bool writeData(uint8</text>
<text text-anchor="start" x="33" y="-844.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t token, const uint8</text>
<text text-anchor="start" x="33" y="-831.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t *src)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node1 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M113.14,-824.36C112.23,-759.04 111.33,-694.8 110.5,-635.08"/>
<polygon fill="none" stroke="#404040" points="110.5,-634.8 106.41,-628.86 110.33,-622.8 114.41,-628.75 110.5,-634.8"/>
<text text-anchor="middle" x="135.5" y="-720.4" font-family="Helvetica,sans-Serif" font-size="12.00"> &#45;m_card</text>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="../../d9/d30/class_sd_card_factory.html" target="_top" xlink:title="Setup a SPI card or SDIO card.">
<polygon fill="white" stroke="black" points="171.5,-672.5 171.5,-774.5 368.5,-774.5 368.5,-672.5 171.5,-672.5"/>
<text text-anchor="middle" x="270" y="-760.9" font-family="Helvetica,sans-Serif" font-size="12.00">SdCardFactory</text>
<polyline fill="none" stroke="black" points="171.5,-753.5 368.5,-753.5 "/>
<text text-anchor="middle" x="270" y="-739.9" font-family="Helvetica,sans-Serif" font-size="12.00"> </text>
<polyline fill="none" stroke="black" points="171.5,-732.5 368.5,-732.5 "/>
<text text-anchor="start" x="179.5" y="-718.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ SdCard * newCard(SdioConfig</text>
<text text-anchor="start" x="179.5" y="-705.9" font-family="Helvetica,sans-Serif" font-size="12.00"> config)</text>
<text text-anchor="start" x="179.5" y="-692.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ SdCard * newCard(SdSpiConfig</text>
<text text-anchor="start" x="179.5" y="-679.9" font-family="Helvetica,sans-Serif" font-size="12.00"> config)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node5 -->
<g id="edge5" class="edge">
<title>Node3&#45;&gt;Node5</title>
<path fill="none" stroke="#404040" d="M219.02,-977.7C234.28,-901.88 248.1,-833.27 257.48,-786.65"/>
<polygon fill="none" stroke="#404040" points="257.52,-786.46 254.79,-779.79 259.89,-774.69 262.63,-781.37 257.52,-786.46"/>
<text text-anchor="middle" x="287" y="-796.4" font-family="Helvetica,sans-Serif" font-size="12.00"> &#45;m_spiCard</text>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="../../dc/da1/class_sd_spi_arduino_driver.html" target="_top" xlink:title="Optimized SPI class for access to SD and SDHC flash memory cards.">
<polygon fill="white" stroke="black" points="40.5,-2146.5 40.5,-2378.5 203.5,-2378.5 203.5,-2146.5 40.5,-2146.5"/>
<text text-anchor="middle" x="122" y="-2364.9" font-family="Helvetica,sans-Serif" font-size="12.00">SdSpiArduinoDriver</text>
<polyline fill="none" stroke="black" points="40.5,-2357.5 203.5,-2357.5 "/>
<text text-anchor="start" x="48.5" y="-2343.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; SPIClass * m_spi</text>
<text text-anchor="start" x="48.5" y="-2330.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; SPISettings m_spiSettings</text>
<polyline fill="none" stroke="black" points="40.5,-2323.5 203.5,-2323.5 "/>
<text text-anchor="start" x="48.5" y="-2309.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void activate()</text>
<text text-anchor="start" x="48.5" y="-2296.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void begin(SdSpiConfig</text>
<text text-anchor="start" x="48.5" y="-2283.9" font-family="Helvetica,sans-Serif" font-size="12.00"> spiConfig)</text>
<text text-anchor="start" x="48.5" y="-2270.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void deactivate()</text>
<text text-anchor="start" x="48.5" y="-2257.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void end()</text>
<text text-anchor="start" x="48.5" y="-2244.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ uint8_t receive()</text>
<text text-anchor="start" x="48.5" y="-2231.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ uint8_t receive(uint8</text>
<text text-anchor="start" x="48.5" y="-2218.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t *buf, size_t count)</text>
<text text-anchor="start" x="48.5" y="-2205.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void send(const uint8</text>
<text text-anchor="start" x="48.5" y="-2192.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t *buf, size_t count)</text>
<text text-anchor="start" x="48.5" y="-2179.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void send(uint8_t data)</text>
<text text-anchor="start" x="48.5" y="-2166.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void setSckSpeed(uint32</text>
<text text-anchor="start" x="48.5" y="-2153.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t maxSck)</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node3</title>
<path fill="none" stroke="#404040" d="M122,-2146.45C122,-2134.62 122,-2122.09 122,-2108.98"/>
<polygon fill="none" stroke="#404040" points="122,-2108.78 118,-2102.78 122,-2096.78 126,-2102.78 122,-2108.78"/>
<text text-anchor="middle" x="157.5" y="-2118.4" font-family="Helvetica,sans-Serif" font-size="12.00"> &#45;m_spiDriver</text>
</g>
<!-- Node5&#45;&gt;Node1 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M249.89,-672.23C240.75,-649.37 229.15,-620.37 216.52,-588.8"/>
<polygon fill="none" stroke="#404040" points="216.47,-588.68 210.53,-584.59 212.01,-577.53 217.96,-581.62 216.47,-588.68"/>
<text text-anchor="middle" x="285" y="-644.4" font-family="Helvetica,sans-Serif" font-size="12.00"> &#45;m_cardFactory</text>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="class_sd_base__coll__graph_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
