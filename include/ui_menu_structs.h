// Autogenerated code from an ERIS python tool script

//Call initUICData() to load the data into the ui_menus[] structure array//
UIMenuType t1;
const char* PROGMEM t1_menu_name = "Configuration";
const uint8_t PROGMEM t1_index = 1;
const char* PROGMEM t1_wallpaper = "/A/V/BROKCHRD";
const char* PROGMEM t1_description = "Globals";
const uint8_t PROGMEM t1_controls_count =  1;
UICType t1_c1;
const char* PROGMEM t1_c1_key = "variable name";
const char* PROGMEM t1_c1_data_type = "DATA";
const uint8_t PROGMEM t1_c1_cc = 1;
const char* PROGMEM t1_c1_text = "menu_name";
const char* PROGMEM t1_c1_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t1_c1_min_value = 0;
const char* PROGMEM t1_c1_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t1_c1_mod_gain = 20;
const uint8_t PROGMEM t1_c1_step_value = 10;
const char* PROGMEM t1_c1_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t1_c1_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t1_c1_mod_value = 0;
const uint8_t PROGMEM t1_c1_value = 50;
const char* PROGMEM t1_c1_list_type = "NOTES";
const uint8_t PROGMEM t1_c1_max_value = 100;
const uint16_t PROGMEM t1_c1_y = 128;
const uint16_t PROGMEM t1_c1_x = 128;
const char* PROGMEM t1_c1_icon = "file name";
const uint8_t PROGMEM t1_c1_mod_source = 0;
const uint8_t PROGMEM t1_c1_mod_invert = 0;
UICType t1_controls[] = {t1_c1};
UIMenuType t2;
const char* PROGMEM t2_menu_name = "Audio";
const uint8_t PROGMEM t2_index = 2;
const char* PROGMEM t2_wallpaper = "/A/V/CLEANROOM";
const char* PROGMEM t2_description = "Audio calibration";
const uint8_t PROGMEM t2_controls_count =  6;
UICType t2_c1;
const char* PROGMEM t2_c1_key = "input_gain";
const char* PROGMEM t2_c1_data_type = "uint16_t";
const uint8_t PROGMEM t2_c1_cc = 2;
const char* PROGMEM t2_c1_text = "InputGain";
const char* PROGMEM t2_c1_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t2_c1_min_value = 1;
const char* PROGMEM t2_c1_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t2_c1_mod_gain = 20;
const uint8_t PROGMEM t2_c1_step_value = 1;
const char* PROGMEM t2_c1_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t2_c1_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t2_c1_mod_value = 0;
const uint8_t PROGMEM t2_c1_value = 1;
const char* PROGMEM t2_c1_list_type = "NOTES";
const uint8_t PROGMEM t2_c1_max_value = 100;
const uint16_t PROGMEM t2_c1_y = 50;
const uint16_t PROGMEM t2_c1_x = 20;
const char* PROGMEM t2_c1_icon = "grain.ile";
const uint8_t PROGMEM t2_c1_mod_source = 0;
const uint8_t PROGMEM t2_c1_mod_invert = 0;
UICType t2_c2;
const char* PROGMEM t2_c2_key = "comp_gain";
const char* PROGMEM t2_c2_data_type = "uint16_t";
const uint8_t PROGMEM t2_c2_cc = 3;
const char* PROGMEM t2_c2_text = "CompGain";
const char* PROGMEM t2_c2_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t2_c2_min_value = 1;
const char* PROGMEM t2_c2_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t2_c2_mod_gain = 20;
const uint8_t PROGMEM t2_c2_step_value = 1;
const char* PROGMEM t2_c2_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t2_c2_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t2_c2_mod_value = 0;
const uint8_t PROGMEM t2_c2_value = 1;
const char* PROGMEM t2_c2_list_type = "NOTES";
const uint8_t PROGMEM t2_c2_max_value = 100;
const uint16_t PROGMEM t2_c2_y = 50;
const uint16_t PROGMEM t2_c2_x = 120;
const char* PROGMEM t2_c2_icon = "grain.ile";
const uint8_t PROGMEM t2_c2_mod_source = 0;
const uint8_t PROGMEM t2_c2_mod_invert = 0;
UICType t2_c3;
const char* PROGMEM t2_c3_key = "input_gain_granular";
const char* PROGMEM t2_c3_data_type = "uint16_t";
const uint8_t PROGMEM t2_c3_cc = 4;
const char* PROGMEM t2_c3_text = "GrainGain";
const char* PROGMEM t2_c3_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t2_c3_min_value = 0;
const char* PROGMEM t2_c3_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t2_c3_mod_gain = 20;
const uint8_t PROGMEM t2_c3_step_value = 1;
const char* PROGMEM t2_c3_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t2_c3_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t2_c3_mod_value = 0;
const uint8_t PROGMEM t2_c3_value = 1;
const char* PROGMEM t2_c3_list_type = "NOTES";
const uint8_t PROGMEM t2_c3_max_value = 100;
const uint16_t PROGMEM t2_c3_y = 50;
const uint16_t PROGMEM t2_c3_x = 220;
const char* PROGMEM t2_c3_icon = "grain.ile";
const uint8_t PROGMEM t2_c3_mod_source = 0;
const uint8_t PROGMEM t2_c3_mod_invert = 0;
UICType t2_c4;
const char* PROGMEM t2_c4_key = "input_spare";
const char* PROGMEM t2_c4_data_type = "DATA";
const uint8_t PROGMEM t2_c4_cc = 5;
const char* PROGMEM t2_c4_text = "Spare";
const char* PROGMEM t2_c4_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t2_c4_min_value = 0;
const char* PROGMEM t2_c4_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t2_c4_mod_gain = 20;
const uint8_t PROGMEM t2_c4_step_value = 1;
const char* PROGMEM t2_c4_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t2_c4_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t2_c4_mod_value = 0;
const uint8_t PROGMEM t2_c4_value = 0;
const char* PROGMEM t2_c4_list_type = "NOTES";
const uint8_t PROGMEM t2_c4_max_value = 100;
const uint16_t PROGMEM t2_c4_y = 145;
const uint16_t PROGMEM t2_c4_x = 20;
const char* PROGMEM t2_c4_icon = "file name";
const uint8_t PROGMEM t2_c4_mod_source = 0;
const uint8_t PROGMEM t2_c4_mod_invert = 0;
UICType t2_c5;
const char* PROGMEM t2_c5_key = "compressor_level";
const char* PROGMEM t2_c5_data_type = "DATA";
const uint8_t PROGMEM t2_c5_cc = 6;
const char* PROGMEM t2_c5_text = "Comp";
const char* PROGMEM t2_c5_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t2_c5_min_value = 0;
const char* PROGMEM t2_c5_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t2_c5_mod_gain = 20;
const uint8_t PROGMEM t2_c5_step_value = 1;
const char* PROGMEM t2_c5_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t2_c5_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t2_c5_mod_value = 0;
const uint8_t PROGMEM t2_c5_value = 0;
const char* PROGMEM t2_c5_list_type = "NOTES";
const uint8_t PROGMEM t2_c5_max_value = 18;
const uint16_t PROGMEM t2_c5_y = 145;
const uint16_t PROGMEM t2_c5_x = 120;
const char* PROGMEM t2_c5_icon = "file name";
const uint8_t PROGMEM t2_c5_mod_source = 0;
const uint8_t PROGMEM t2_c5_mod_invert = 0;
UICType t2_c6;
const char* PROGMEM t2_c6_key = "granular_waveshape";
const char* PROGMEM t2_c6_data_type = "DATA";
const uint8_t PROGMEM t2_c6_cc = 7;
const char* PROGMEM t2_c6_text = "Grain Comp";
const char* PROGMEM t2_c6_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t2_c6_min_value = 0;
const char* PROGMEM t2_c6_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t2_c6_mod_gain = 20;
const uint8_t PROGMEM t2_c6_step_value = 1;
const char* PROGMEM t2_c6_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t2_c6_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t2_c6_mod_value = 0;
const uint8_t PROGMEM t2_c6_value = 2;
const char* PROGMEM t2_c6_list_type = "NOTES";
const uint8_t PROGMEM t2_c6_max_value = 18;
const uint16_t PROGMEM t2_c6_y = 145;
const uint16_t PROGMEM t2_c6_x = 220;
const char* PROGMEM t2_c6_icon = "file name";
const uint8_t PROGMEM t2_c6_mod_source = 0;
const uint8_t PROGMEM t2_c6_mod_invert = 0;
UICType t2_controls[] = {t2_c1, t2_c2, t2_c3, t2_c4, t2_c5, t2_c6};
UIMenuType t3;
const char* PROGMEM t3_menu_name = "Expression";
const uint8_t PROGMEM t3_index = 3;
const char* PROGMEM t3_wallpaper = "/A/V/RAINBOWHALL";
const char* PROGMEM t3_description = "Exp calibration";
const uint8_t PROGMEM t3_controls_count =  1;
UICType t3_c1;
const char* PROGMEM t3_c1_key = "expression_gain";
const char* PROGMEM t3_c1_data_type = "float";
const uint8_t PROGMEM t3_c1_cc = 8;
const char* PROGMEM t3_c1_text = "Gain";
const char* PROGMEM t3_c1_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t3_c1_min_value = 0;
const char* PROGMEM t3_c1_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t3_c1_mod_gain = 20;
const float PROGMEM t3_c1_step_value = 0.1;
const char* PROGMEM t3_c1_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t3_c1_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t3_c1_mod_value = 0;
const uint8_t PROGMEM t3_c1_value = 1;
const char* PROGMEM t3_c1_list_type = "NOTES";
const uint8_t PROGMEM t3_c1_max_value = 2;
const uint16_t PROGMEM t3_c1_y = 128;
const uint16_t PROGMEM t3_c1_x = 128;
const char* PROGMEM t3_c1_icon = "volume.ile";
const uint8_t PROGMEM t3_c1_mod_source = 0;
const uint8_t PROGMEM t3_c1_mod_invert = 0;
UICType t3_controls[] = {t3_c1};
UIMenuType t4;
const char* PROGMEM t4_menu_name = "Tuner";
const uint8_t PROGMEM t4_index = 4;
const char* PROGMEM t4_wallpaper = "/A/V/BLUYELLOWTRI";
const char* PROGMEM t4_description = "Input Tuner";
const uint8_t PROGMEM t4_controls_count =  1;
UICType t4_c1;
const char* PROGMEM t4_c1_key = "variable name";
const char* PROGMEM t4_c1_data_type = "DATA";
const uint8_t PROGMEM t4_c1_cc = 9;
const char* PROGMEM t4_c1_text = "menu_name";
const char* PROGMEM t4_c1_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t4_c1_min_value = 0;
const char* PROGMEM t4_c1_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t4_c1_mod_gain = 20;
const uint8_t PROGMEM t4_c1_step_value = 10;
const char* PROGMEM t4_c1_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t4_c1_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t4_c1_mod_value = 0;
const uint8_t PROGMEM t4_c1_value = 50;
const char* PROGMEM t4_c1_list_type = "NOTES";
const uint8_t PROGMEM t4_c1_max_value = 100;
const uint16_t PROGMEM t4_c1_y = 128;
const uint16_t PROGMEM t4_c1_x = 128;
const char* PROGMEM t4_c1_icon = "file name";
const uint8_t PROGMEM t4_c1_mod_source = 0;
const uint8_t PROGMEM t4_c1_mod_invert = 0;
UICType t4_controls[] = {t4_c1};
UIMenuType t5;
const char* PROGMEM t5_menu_name = "MIDI";
const uint8_t PROGMEM t5_index = 5;
const char* PROGMEM t5_wallpaper = "/A/V/REDSMOKE";
const char* PROGMEM t5_description = "MIDI Setup";
const uint8_t PROGMEM t5_controls_count =  4;
UICType t5_c1;
const char* PROGMEM t5_c1_key = "midi_passthrough_enable";
const char* PROGMEM t5_c1_data_type = "DATA";
const uint8_t PROGMEM t5_c1_cc = 10;
const char* PROGMEM t5_c1_text = "Pass";
const char* PROGMEM t5_c1_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t5_c1_min_value = 0;
const char* PROGMEM t5_c1_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t5_c1_mod_gain = 20;
const uint8_t PROGMEM t5_c1_step_value = 1;
const char* PROGMEM t5_c1_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t5_c1_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t5_c1_mod_value = 0;
const uint8_t PROGMEM t5_c1_value = 1;
const char* PROGMEM t5_c1_list_type = "NOTES";
const uint8_t PROGMEM t5_c1_max_value = 1;
const uint16_t PROGMEM t5_c1_y = 50;
const uint16_t PROGMEM t5_c1_x = 20;
const char* PROGMEM t5_c1_icon = "file name";
const uint8_t PROGMEM t5_c1_mod_source = 0;
const uint8_t PROGMEM t5_c1_mod_invert = 0;
UICType t5_c2;
const char* PROGMEM t5_c2_key = "midi_listen_channel";
const char* PROGMEM t5_c2_data_type = "DATA";
const uint8_t PROGMEM t5_c2_cc = 11;
const char* PROGMEM t5_c2_text = "Channel";
const char* PROGMEM t5_c2_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t5_c2_min_value = 0;
const char* PROGMEM t5_c2_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t5_c2_mod_gain = 20;
const uint8_t PROGMEM t5_c2_step_value = 10;
const char* PROGMEM t5_c2_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t5_c2_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t5_c2_mod_value = 0;
const uint8_t PROGMEM t5_c2_value = 3;
const char* PROGMEM t5_c2_list_type = "NOTES";
const uint8_t PROGMEM t5_c2_max_value = 16;
const uint16_t PROGMEM t5_c2_y = 50;
const uint16_t PROGMEM t5_c2_x = 120;
const char* PROGMEM t5_c2_icon = "file name";
const uint8_t PROGMEM t5_c2_mod_source = 0;
const uint8_t PROGMEM t5_c2_mod_invert = 0;
UICType t5_c3;
const char* PROGMEM t5_c3_key = "midi_clock_sync_enable";
const char* PROGMEM t5_c3_data_type = "DATA";
const uint8_t PROGMEM t5_c3_cc = 12;
const char* PROGMEM t5_c3_text = "Clock Sync";
const char* PROGMEM t5_c3_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t5_c3_min_value = 0;
const char* PROGMEM t5_c3_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t5_c3_mod_gain = 20;
const uint8_t PROGMEM t5_c3_step_value = 1;
const char* PROGMEM t5_c3_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t5_c3_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t5_c3_mod_value = 0;
const uint8_t PROGMEM t5_c3_value = 1;
const char* PROGMEM t5_c3_list_type = "NOTES";
const uint8_t PROGMEM t5_c3_max_value = 1;
const uint16_t PROGMEM t5_c3_y = 50;
const uint16_t PROGMEM t5_c3_x = 220;
const char* PROGMEM t5_c3_icon = "file name";
const uint8_t PROGMEM t5_c3_mod_source = 0;
const uint8_t PROGMEM t5_c3_mod_invert = 0;
UICType t5_c4;
const char* PROGMEM t5_c4_key = "midi_send_clock_enable";
const char* PROGMEM t5_c4_data_type = "DATA";
const uint8_t PROGMEM t5_c4_cc = 13;
const char* PROGMEM t5_c4_text = "Send Clock";
const char* PROGMEM t5_c4_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t5_c4_min_value = 0;
const char* PROGMEM t5_c4_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t5_c4_mod_gain = 20;
const uint8_t PROGMEM t5_c4_step_value = 0;
const char* PROGMEM t5_c4_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t5_c4_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t5_c4_mod_value = 0;
const uint8_t PROGMEM t5_c4_value = 1;
const char* PROGMEM t5_c4_list_type = "NOTES";
const uint8_t PROGMEM t5_c4_max_value = 1;
const uint16_t PROGMEM t5_c4_y = 145;
const uint16_t PROGMEM t5_c4_x = 20;
const char* PROGMEM t5_c4_icon = "file name";
const uint8_t PROGMEM t5_c4_mod_source = 0;
const uint8_t PROGMEM t5_c4_mod_invert = 0;
UICType t5_controls[] = {t5_c1, t5_c2, t5_c3, t5_c4};
UIMenuType t6;
const char* PROGMEM t6_menu_name = "Tempo";
const uint8_t PROGMEM t6_index = 6;
const char* PROGMEM t6_wallpaper = "/A/V/ORNGGRNTUNNEL";
const char* PROGMEM t6_description = "Set Tempo";
const uint8_t PROGMEM t6_controls_count =  0;
UICType t6_controls[] = {};
UIMenuType t7;
const char* PROGMEM t7_menu_name = "Drums";
const uint8_t PROGMEM t7_index = 7;
const char* PROGMEM t7_wallpaper = "/A/V/REDLASERSQUARE";
const char* PROGMEM t7_description = "Drum Machine";
const uint8_t PROGMEM t7_controls_count =  1;
UICType t7_c1;
const char* PROGMEM t7_c1_key = "variable name";
const char* PROGMEM t7_c1_data_type = "DATA";
const uint8_t PROGMEM t7_c1_cc = 15;
const char* PROGMEM t7_c1_text = "menu_name";
const char* PROGMEM t7_c1_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t7_c1_min_value = 0;
const char* PROGMEM t7_c1_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t7_c1_mod_gain = 20;
const uint8_t PROGMEM t7_c1_step_value = 10;
const char* PROGMEM t7_c1_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t7_c1_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t7_c1_mod_value = 0;
const uint8_t PROGMEM t7_c1_value = 50;
const char* PROGMEM t7_c1_list_type = "NOTES";
const uint8_t PROGMEM t7_c1_max_value = 100;
const uint16_t PROGMEM t7_c1_y = 128;
const uint16_t PROGMEM t7_c1_x = 128;
const char* PROGMEM t7_c1_icon = "file name";
const uint8_t PROGMEM t7_c1_mod_source = 0;
const uint8_t PROGMEM t7_c1_mod_invert = 0;
UICType t7_controls[] = {t7_c1};
UIMenuType t8;
const char* PROGMEM t8_menu_name = "Presets";
const uint8_t PROGMEM t8_index = 8;
const char* PROGMEM t8_wallpaper = "/A/V/REDCITY";
const char* PROGMEM t8_description = "Save or Load";
const uint8_t PROGMEM t8_controls_count =  1;
UICType t8_c1;
const char* PROGMEM t8_c1_key = "preset_index";
const char* PROGMEM t8_c1_data_type = "DATA";
const uint8_t PROGMEM t8_c1_cc = 16;
const char* PROGMEM t8_c1_text = "Preset";
const char* PROGMEM t8_c1_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t8_c1_min_value = 0;
const char* PROGMEM t8_c1_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t8_c1_mod_gain = 20;
const uint8_t PROGMEM t8_c1_step_value = 1;
const char* PROGMEM t8_c1_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t8_c1_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t8_c1_mod_value = 0;
const uint8_t PROGMEM t8_c1_value = 1;
const char* PROGMEM t8_c1_list_type = "NOTES";
const uint8_t PROGMEM t8_c1_max_value = 100;
const uint16_t PROGMEM t8_c1_y = 128;
const uint16_t PROGMEM t8_c1_x = 128;
const char* PROGMEM t8_c1_icon = "file name";
const uint8_t PROGMEM t8_c1_mod_source = 0;
const uint8_t PROGMEM t8_c1_mod_invert = 0;
UICType t8_controls[] = {t8_c1};
UIMenuType t9;
const char* PROGMEM t9_menu_name = "Synth";
const uint8_t PROGMEM t9_index = 9;
const char* PROGMEM t9_wallpaper = "/A/V/RAINBOWSPHERE";
const char* PROGMEM t9_description = "Synth";
const uint8_t PROGMEM t9_controls_count =  6;
UICType t9_c1;
const char* PROGMEM t9_c1_key = "synth_filter_freq";
const char* PROGMEM t9_c1_data_type = "DATA";
const uint8_t PROGMEM t9_c1_cc = 17;
const char* PROGMEM t9_c1_text = "FiltFreq";
const char* PROGMEM t9_c1_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t9_c1_min_value = 0;
const char* PROGMEM t9_c1_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t9_c1_mod_gain = 20;
const uint8_t PROGMEM t9_c1_step_value = 1;
const char* PROGMEM t9_c1_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t9_c1_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t9_c1_mod_value = 0;
const uint8_t PROGMEM t9_c1_value = 70;
const char* PROGMEM t9_c1_list_type = "NOTES";
const uint8_t PROGMEM t9_c1_max_value = 100;
const uint16_t PROGMEM t9_c1_y = 50;
const uint16_t PROGMEM t9_c1_x = 20;
const char* PROGMEM t9_c1_icon = "file name";
const uint8_t PROGMEM t9_c1_mod_source = 0;
const uint8_t PROGMEM t9_c1_mod_invert = 0;
UICType t9_c2;
const char* PROGMEM t9_c2_key = "synth_filter_res";
const char* PROGMEM t9_c2_data_type = "DATA";
const uint8_t PROGMEM t9_c2_cc = 18;
const char* PROGMEM t9_c2_text = "FiltRes";
const char* PROGMEM t9_c2_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t9_c2_min_value = 0;
const char* PROGMEM t9_c2_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t9_c2_mod_gain = 20;
const uint8_t PROGMEM t9_c2_step_value = 1;
const char* PROGMEM t9_c2_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t9_c2_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t9_c2_mod_value = 0;
const uint8_t PROGMEM t9_c2_value = 35;
const char* PROGMEM t9_c2_list_type = "NOTES";
const uint8_t PROGMEM t9_c2_max_value = 100;
const uint16_t PROGMEM t9_c2_y = 50;
const uint16_t PROGMEM t9_c2_x = 120;
const char* PROGMEM t9_c2_icon = "file name";
const uint8_t PROGMEM t9_c2_mod_source = 0;
const uint8_t PROGMEM t9_c2_mod_invert = 0;
UICType t9_c3;
const char* PROGMEM t9_c3_key = "synth_filter_oct";
const char* PROGMEM t9_c3_data_type = "DATA";
const uint8_t PROGMEM t9_c3_cc = 19;
const char* PROGMEM t9_c3_text = "Depth";
const char* PROGMEM t9_c3_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t9_c3_min_value = 0;
const char* PROGMEM t9_c3_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t9_c3_mod_gain = 20;
const uint8_t PROGMEM t9_c3_step_value = 1;
const char* PROGMEM t9_c3_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t9_c3_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t9_c3_mod_value = 0;
const uint8_t PROGMEM t9_c3_value = 40;
const char* PROGMEM t9_c3_list_type = "NOTES";
const uint8_t PROGMEM t9_c3_max_value = 100;
const uint16_t PROGMEM t9_c3_y = 50;
const uint16_t PROGMEM t9_c3_x = 220;
const char* PROGMEM t9_c3_icon = "file name";
const uint8_t PROGMEM t9_c3_mod_source = 0;
const uint8_t PROGMEM t9_c3_mod_invert = 0;
UICType t9_c4;
const char* PROGMEM t9_c4_key = "filter_osc";
const char* PROGMEM t9_c4_data_type = "DATA";
const uint8_t PROGMEM t9_c4_cc = 20;
const char* PROGMEM t9_c4_text = "OSC";
const char* PROGMEM t9_c4_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t9_c4_min_value = 0;
const char* PROGMEM t9_c4_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t9_c4_mod_gain = 20;
const uint8_t PROGMEM t9_c4_step_value = 10;
const char* PROGMEM t9_c4_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t9_c4_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t9_c4_mod_value = 0;
const uint8_t PROGMEM t9_c4_value = 5;
const char* PROGMEM t9_c4_list_type = "NOTES";
const uint8_t PROGMEM t9_c4_max_value = 100;
const uint16_t PROGMEM t9_c4_y = 145;
const uint16_t PROGMEM t9_c4_x = 20;
const char* PROGMEM t9_c4_icon = "file name";
const uint8_t PROGMEM t9_c4_mod_source = 0;
const uint8_t PROGMEM t9_c4_mod_invert = 0;
UICType t9_c5;
const char* PROGMEM t9_c5_key = "filter_osc_mod";
const char* PROGMEM t9_c5_data_type = "DATA";
const uint8_t PROGMEM t9_c5_cc = 21;
const char* PROGMEM t9_c5_text = "MOD";
const char* PROGMEM t9_c5_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t9_c5_min_value = 0;
const char* PROGMEM t9_c5_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t9_c5_mod_gain = 20;
const uint8_t PROGMEM t9_c5_step_value = 10;
const char* PROGMEM t9_c5_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t9_c5_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t9_c5_mod_value = 0;
const uint8_t PROGMEM t9_c5_value = 3;
const char* PROGMEM t9_c5_list_type = "NOTES";
const uint8_t PROGMEM t9_c5_max_value = 100;
const uint16_t PROGMEM t9_c5_y = 145;
const uint16_t PROGMEM t9_c5_x = 120;
const char* PROGMEM t9_c5_icon = "file name";
const uint8_t PROGMEM t9_c5_mod_source = 0;
const uint8_t PROGMEM t9_c5_mod_invert = 0;
UICType t9_c6;
const char* PROGMEM t9_c6_key = "filter_osc_shape";
const char* PROGMEM t9_c6_data_type = "DATA";
const uint8_t PROGMEM t9_c6_cc = 22;
const char* PROGMEM t9_c6_text = "Shape";
const char* PROGMEM t9_c6_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t9_c6_min_value = 0;
const char* PROGMEM t9_c6_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t9_c6_mod_gain = 20;
const uint8_t PROGMEM t9_c6_step_value = 7;
const char* PROGMEM t9_c6_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t9_c6_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t9_c6_mod_value = 0;
const uint8_t PROGMEM t9_c6_value = 5;
const char* PROGMEM t9_c6_list_type = "NOTES";
const uint8_t PROGMEM t9_c6_max_value = 100;
const uint16_t PROGMEM t9_c6_y = 145;
const uint16_t PROGMEM t9_c6_x = 220;
const char* PROGMEM t9_c6_icon = "file name";
const uint8_t PROGMEM t9_c6_mod_source = 0;
const uint8_t PROGMEM t9_c6_mod_invert = 0;
UICType t9_controls[] = {t9_c1, t9_c2, t9_c3, t9_c4, t9_c5, t9_c6};
UIMenuType t10;
const char* PROGMEM t10_menu_name = "Mixer";
const uint8_t PROGMEM t10_index = 10;
const char* PROGMEM t10_wallpaper = "/A/V/REDWIREWAVE";
const char* PROGMEM t10_description = "Output Mixer";
const uint8_t PROGMEM t10_controls_count =  6;
UICType t10_c1;
const char* PROGMEM t10_c1_key = "dry_mix";
const char* PROGMEM t10_c1_data_type = "DATA";
const uint8_t PROGMEM t10_c1_cc = 23;
const char* PROGMEM t10_c1_text = "Dry";
const char* PROGMEM t10_c1_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t10_c1_min_value = 0;
const char* PROGMEM t10_c1_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t10_c1_mod_gain = 20;
const uint8_t PROGMEM t10_c1_step_value = 1;
const char* PROGMEM t10_c1_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t10_c1_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t10_c1_mod_value = 0;
const uint8_t PROGMEM t10_c1_value = 40;
const char* PROGMEM t10_c1_list_type = "NOTES";
const uint8_t PROGMEM t10_c1_max_value = 100;
const uint16_t PROGMEM t10_c1_y = 50;
const uint16_t PROGMEM t10_c1_x = 20;
const char* PROGMEM t10_c1_icon = "file name";
const uint8_t PROGMEM t10_c1_mod_source = 0;
const uint8_t PROGMEM t10_c1_mod_invert = 0;
UICType t10_c2;
const char* PROGMEM t10_c2_key = "grainular_mix";
const char* PROGMEM t10_c2_data_type = "DATA";
const uint8_t PROGMEM t10_c2_cc = 24;
const char* PROGMEM t10_c2_text = "Grainular";
const char* PROGMEM t10_c2_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t10_c2_min_value = 0;
const char* PROGMEM t10_c2_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t10_c2_mod_gain = 20;
const uint8_t PROGMEM t10_c2_step_value = 1;
const char* PROGMEM t10_c2_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t10_c2_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t10_c2_mod_value = 0;
const uint8_t PROGMEM t10_c2_value = 5;
const char* PROGMEM t10_c2_list_type = "NOTES";
const uint8_t PROGMEM t10_c2_max_value = 100;
const uint16_t PROGMEM t10_c2_y = 50;
const uint16_t PROGMEM t10_c2_x = 120;
const char* PROGMEM t10_c2_icon = "file name";
const uint8_t PROGMEM t10_c2_mod_source = 0;
const uint8_t PROGMEM t10_c2_mod_invert = 0;
UICType t10_c3;
const char* PROGMEM t10_c3_key = "synth_mix";
const char* PROGMEM t10_c3_data_type = "DATA";
const uint8_t PROGMEM t10_c3_cc = 25;
const char* PROGMEM t10_c3_text = "Synth Mstr";
const char* PROGMEM t10_c3_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t10_c3_min_value = 0;
const char* PROGMEM t10_c3_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t10_c3_mod_gain = 20;
const uint8_t PROGMEM t10_c3_step_value = 10;
const char* PROGMEM t10_c3_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t10_c3_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t10_c3_mod_value = 0;
const uint8_t PROGMEM t10_c3_value = 20;
const char* PROGMEM t10_c3_list_type = "NOTES";
const uint8_t PROGMEM t10_c3_max_value = 100;
const uint16_t PROGMEM t10_c3_y = 50;
const uint16_t PROGMEM t10_c3_x = 220;
const char* PROGMEM t10_c3_icon = "file name";
const uint8_t PROGMEM t10_c3_mod_source = 0;
const uint8_t PROGMEM t10_c3_mod_invert = 0;
UICType t10_c4;
const char* PROGMEM t10_c4_key = "synth_lp_mix";
const char* PROGMEM t10_c4_data_type = "DATA";
const uint8_t PROGMEM t10_c4_cc = 26;
const char* PROGMEM t10_c4_text = "Synth LP";
const char* PROGMEM t10_c4_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t10_c4_min_value = 0;
const char* PROGMEM t10_c4_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t10_c4_mod_gain = 20;
const uint8_t PROGMEM t10_c4_step_value = 10;
const char* PROGMEM t10_c4_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t10_c4_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t10_c4_mod_value = 0;
const uint8_t PROGMEM t10_c4_value = 60;
const char* PROGMEM t10_c4_list_type = "NOTES";
const uint8_t PROGMEM t10_c4_max_value = 100;
const uint16_t PROGMEM t10_c4_y = 145;
const uint16_t PROGMEM t10_c4_x = 20;
const char* PROGMEM t10_c4_icon = "file name";
const uint8_t PROGMEM t10_c4_mod_source = 0;
const uint8_t PROGMEM t10_c4_mod_invert = 0;
UICType t10_c5;
const char* PROGMEM t10_c5_key = "synth_hp_mix";
const char* PROGMEM t10_c5_data_type = "DATA";
const uint8_t PROGMEM t10_c5_cc = 27;
const char* PROGMEM t10_c5_text = "Synth HP";
const char* PROGMEM t10_c5_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t10_c5_min_value = 0;
const char* PROGMEM t10_c5_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t10_c5_mod_gain = 20;
const uint8_t PROGMEM t10_c5_step_value = 10;
const char* PROGMEM t10_c5_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t10_c5_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t10_c5_mod_value = 0;
const uint8_t PROGMEM t10_c5_value = 25;
const char* PROGMEM t10_c5_list_type = "NOTES";
const uint8_t PROGMEM t10_c5_max_value = 100;
const uint16_t PROGMEM t10_c5_y = 145;
const uint16_t PROGMEM t10_c5_x = 120;
const char* PROGMEM t10_c5_icon = "file name";
const uint8_t PROGMEM t10_c5_mod_source = 0;
const uint8_t PROGMEM t10_c5_mod_invert = 0;
UICType t10_c6;
const char* PROGMEM t10_c6_key = "synth_bp_mix";
const char* PROGMEM t10_c6_data_type = "DATA";
const uint8_t PROGMEM t10_c6_cc = 28;
const char* PROGMEM t10_c6_text = "Synth BP";
const char* PROGMEM t10_c6_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t10_c6_min_value = 0;
const char* PROGMEM t10_c6_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t10_c6_mod_gain = 20;
const uint8_t PROGMEM t10_c6_step_value = 10;
const char* PROGMEM t10_c6_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t10_c6_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t10_c6_mod_value = 0;
const uint8_t PROGMEM t10_c6_value = 30;
const char* PROGMEM t10_c6_list_type = "NOTES";
const uint8_t PROGMEM t10_c6_max_value = 100;
const uint16_t PROGMEM t10_c6_y = 145;
const uint16_t PROGMEM t10_c6_x = 220;
const char* PROGMEM t10_c6_icon = "file name";
const uint8_t PROGMEM t10_c6_mod_source = 0;
const uint8_t PROGMEM t10_c6_mod_invert = 0;
UICType t10_controls[] = {t10_c1, t10_c2, t10_c3, t10_c4, t10_c5, t10_c6};
UIMenuType t11;
const char* PROGMEM t11_menu_name = "Granulizer";
const uint8_t PROGMEM t11_index = 11;
const char* PROGMEM t11_wallpaper = "/A/V/BLULINZ";
const char* PROGMEM t11_description = "Grain Settings";
const uint8_t PROGMEM t11_controls_count =  6;
UICType t11_c1;
const char* PROGMEM t11_c1_key = "trigger_threshold";
const char* PROGMEM t11_c1_data_type = "uint16_t";
const uint8_t PROGMEM t11_c1_cc = 29;
const char* PROGMEM t11_c1_text = "Trigger";
const char* PROGMEM t11_c1_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t11_c1_min_value = 1;
const char* PROGMEM t11_c1_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t11_c1_mod_gain = 20;
const uint8_t PROGMEM t11_c1_step_value = 1;
const char* PROGMEM t11_c1_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t11_c1_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t11_c1_mod_value = 0;
const uint8_t PROGMEM t11_c1_value = 14;
const char* PROGMEM t11_c1_list_type = "NOTES";
const uint8_t PROGMEM t11_c1_max_value = 100;
const uint16_t PROGMEM t11_c1_y = 50;
const uint16_t PROGMEM t11_c1_x = 20;
const char* PROGMEM t11_c1_icon = "grain.ile";
const uint8_t PROGMEM t11_c1_mod_source = 0;
const uint8_t PROGMEM t11_c1_mod_invert = 0;
UICType t11_c2;
const char* PROGMEM t11_c2_key = "trigger_holdoff";
const char* PROGMEM t11_c2_data_type = "uint16_t";
const uint8_t PROGMEM t11_c2_cc = 30;
const char* PROGMEM t11_c2_text = "Holdoff";
const char* PROGMEM t11_c2_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t11_c2_min_value = 1;
const char* PROGMEM t11_c2_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t11_c2_mod_gain = 20;
const uint8_t PROGMEM t11_c2_step_value = 1;
const char* PROGMEM t11_c2_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t11_c2_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t11_c2_mod_value = 0;
const uint8_t PROGMEM t11_c2_value = 14;
const char* PROGMEM t11_c2_list_type = "NOTES";
const uint8_t PROGMEM t11_c2_max_value = 100;
const uint16_t PROGMEM t11_c2_y = 50;
const uint16_t PROGMEM t11_c2_x = 120;
const char* PROGMEM t11_c2_icon = "grain.ile";
const uint8_t PROGMEM t11_c2_mod_source = 0;
const uint8_t PROGMEM t11_c2_mod_invert = 0;
UICType t11_c3;
const char* PROGMEM t11_c3_key = "trigger_reset";
const char* PROGMEM t11_c3_data_type = "uint16_t";
const uint8_t PROGMEM t11_c3_cc = 31;
const char* PROGMEM t11_c3_text = "Reset";
const char* PROGMEM t11_c3_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t11_c3_min_value = 0;
const char* PROGMEM t11_c3_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t11_c3_mod_gain = 20;
const uint8_t PROGMEM t11_c3_step_value = 1;
const char* PROGMEM t11_c3_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t11_c3_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t11_c3_mod_value = 0;
const uint8_t PROGMEM t11_c3_value = 12;
const char* PROGMEM t11_c3_list_type = "NOTES";
const uint8_t PROGMEM t11_c3_max_value = 100;
const uint16_t PROGMEM t11_c3_y = 50;
const uint16_t PROGMEM t11_c3_x = 220;
const char* PROGMEM t11_c3_icon = "grain.ile";
const uint8_t PROGMEM t11_c3_mod_source = 0;
const uint8_t PROGMEM t11_c3_mod_invert = 0;
UICType t11_c4;
const char* PROGMEM t11_c4_key = "gran_osc";
const char* PROGMEM t11_c4_data_type = "DATA";
const uint8_t PROGMEM t11_c4_cc = 32;
const char* PROGMEM t11_c4_text = "OSC";
const char* PROGMEM t11_c4_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t11_c4_min_value = 0;
const char* PROGMEM t11_c4_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t11_c4_mod_gain = 20;
const uint8_t PROGMEM t11_c4_step_value = 1;
const char* PROGMEM t11_c4_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t11_c4_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t11_c4_mod_value = 0;
const uint8_t PROGMEM t11_c4_value = 8;
const char* PROGMEM t11_c4_list_type = "NOTES";
const uint8_t PROGMEM t11_c4_max_value = 100;
const uint16_t PROGMEM t11_c4_y = 145;
const uint16_t PROGMEM t11_c4_x = 20;
const char* PROGMEM t11_c4_icon = "file name";
const uint8_t PROGMEM t11_c4_mod_source = 0;
const uint8_t PROGMEM t11_c4_mod_invert = 0;
UICType t11_c5;
const char* PROGMEM t11_c5_key = "gran_osc_mod";
const char* PROGMEM t11_c5_data_type = "DATA";
const uint8_t PROGMEM t11_c5_cc = 33;
const char* PROGMEM t11_c5_text = "MOD";
const char* PROGMEM t11_c5_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t11_c5_min_value = 0;
const char* PROGMEM t11_c5_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t11_c5_mod_gain = 20;
const uint8_t PROGMEM t11_c5_step_value = 1;
const char* PROGMEM t11_c5_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t11_c5_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t11_c5_mod_value = 0;
const uint8_t PROGMEM t11_c5_value = 2;
const char* PROGMEM t11_c5_list_type = "NOTES";
const uint8_t PROGMEM t11_c5_max_value = 100;
const uint16_t PROGMEM t11_c5_y = 145;
const uint16_t PROGMEM t11_c5_x = 120;
const char* PROGMEM t11_c5_icon = "file name";
const uint8_t PROGMEM t11_c5_mod_source = 0;
const uint8_t PROGMEM t11_c5_mod_invert = 0;
UICType t11_c6;
const char* PROGMEM t11_c6_key = "gran_osc_shape";
const char* PROGMEM t11_c6_data_type = "DATA";
const uint8_t PROGMEM t11_c6_cc = 34;
const char* PROGMEM t11_c6_text = "Shape";
const char* PROGMEM t11_c6_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t11_c6_min_value = 0;
const char* PROGMEM t11_c6_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t11_c6_mod_gain = 20;
const uint8_t PROGMEM t11_c6_step_value = 1;
const char* PROGMEM t11_c6_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t11_c6_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t11_c6_mod_value = 0;
const uint8_t PROGMEM t11_c6_value = 2;
const char* PROGMEM t11_c6_list_type = "NOTES";
const uint8_t PROGMEM t11_c6_max_value = 100;
const uint16_t PROGMEM t11_c6_y = 145;
const uint16_t PROGMEM t11_c6_x = 220;
const char* PROGMEM t11_c6_icon = "file name";
const uint8_t PROGMEM t11_c6_mod_source = 0;
const uint8_t PROGMEM t11_c6_mod_invert = 0;
UICType t11_controls[] = {t11_c1, t11_c2, t11_c3, t11_c4, t11_c5, t11_c6};
UIMenuType t12;
const char* PROGMEM t12_menu_name = "Freeze";
const uint8_t PROGMEM t12_index = 12;
const char* PROGMEM t12_wallpaper = "/A/V/MAGWAV";
const char* PROGMEM t12_description = "Freeze Settings";
const uint8_t PROGMEM t12_controls_count =  1;
UICType t12_c1;
const char* PROGMEM t12_c1_key = "variable name";
const char* PROGMEM t12_c1_data_type = "DATA";
const uint8_t PROGMEM t12_c1_cc = 35;
const char* PROGMEM t12_c1_text = "menu_name";
const char* PROGMEM t12_c1_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t12_c1_min_value = 0;
const char* PROGMEM t12_c1_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t12_c1_mod_gain = 20;
const uint8_t PROGMEM t12_c1_step_value = 10;
const char* PROGMEM t12_c1_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t12_c1_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t12_c1_mod_value = 0;
const uint8_t PROGMEM t12_c1_value = 50;
const char* PROGMEM t12_c1_list_type = "NOTES";
const uint8_t PROGMEM t12_c1_max_value = 100;
const uint16_t PROGMEM t12_c1_y = 128;
const uint16_t PROGMEM t12_c1_x = 128;
const char* PROGMEM t12_c1_icon = "file name";
const uint8_t PROGMEM t12_c1_mod_source = 0;
const uint8_t PROGMEM t12_c1_mod_invert = 0;
UICType t12_controls[] = {t12_c1};
UIMenuType t13;
const char* PROGMEM t13_menu_name = "Doubler";
const uint8_t PROGMEM t13_index = 13;
const char* PROGMEM t13_wallpaper = "/A/V/BLUENEONSQUARE";
const char* PROGMEM t13_description = "Delay Settings";
const uint8_t PROGMEM t13_controls_count =  1;
UICType t13_c1;
const char* PROGMEM t13_c1_key = "variable name";
const char* PROGMEM t13_c1_data_type = "DATA";
const uint8_t PROGMEM t13_c1_cc = 36;
const char* PROGMEM t13_c1_text = "menu_name";
const char* PROGMEM t13_c1_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t13_c1_min_value = 0;
const char* PROGMEM t13_c1_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t13_c1_mod_gain = 20;
const uint8_t PROGMEM t13_c1_step_value = 10;
const char* PROGMEM t13_c1_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t13_c1_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t13_c1_mod_value = 0;
const uint8_t PROGMEM t13_c1_value = 50;
const char* PROGMEM t13_c1_list_type = "NOTES";
const uint8_t PROGMEM t13_c1_max_value = 100;
const uint16_t PROGMEM t13_c1_y = 128;
const uint16_t PROGMEM t13_c1_x = 128;
const char* PROGMEM t13_c1_icon = "file name";
const uint8_t PROGMEM t13_c1_mod_source = 0;
const uint8_t PROGMEM t13_c1_mod_invert = 0;
UICType t13_controls[] = {t13_c1};
UIMenuType t14;
const char* PROGMEM t14_menu_name = "LFO";
const uint8_t PROGMEM t14_index = 14;
const char* PROGMEM t14_wallpaper = "/A/V/REDGRID";
const char* PROGMEM t14_description = "LFO Settings";
const uint8_t PROGMEM t14_controls_count =  6;
UICType t14_c1;
const char* PROGMEM t14_c1_key = "lfo_freq";
const char* PROGMEM t14_c1_data_type = "DATA";
const uint8_t PROGMEM t14_c1_cc = 37;
const char* PROGMEM t14_c1_text = "LFO OSC";
const char* PROGMEM t14_c1_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t14_c1_min_value = 0;
const char* PROGMEM t14_c1_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t14_c1_mod_gain = 20;
const uint8_t PROGMEM t14_c1_step_value = 1;
const char* PROGMEM t14_c1_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t14_c1_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t14_c1_mod_value = 0;
const uint8_t PROGMEM t14_c1_value = 5;
const char* PROGMEM t14_c1_list_type = "NOTES";
const uint8_t PROGMEM t14_c1_max_value = 100;
const uint16_t PROGMEM t14_c1_y = 50;
const uint16_t PROGMEM t14_c1_x = 20;
const char* PROGMEM t14_c1_icon = "file name";
const uint8_t PROGMEM t14_c1_mod_source = 0;
const uint8_t PROGMEM t14_c1_mod_invert = 0;
UICType t14_c2;
const char* PROGMEM t14_c2_key = "lfo_amp";
const char* PROGMEM t14_c2_data_type = "DATA";
const uint8_t PROGMEM t14_c2_cc = 38;
const char* PROGMEM t14_c2_text = "Depth";
const char* PROGMEM t14_c2_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t14_c2_min_value = 1;
const char* PROGMEM t14_c2_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t14_c2_mod_gain = 20;
const uint8_t PROGMEM t14_c2_step_value = 1;
const char* PROGMEM t14_c2_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t14_c2_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t14_c2_mod_value = 0;
const uint8_t PROGMEM t14_c2_value = 25;
const char* PROGMEM t14_c2_list_type = "NOTES";
const uint8_t PROGMEM t14_c2_max_value = 100;
const uint16_t PROGMEM t14_c2_y = 50;
const uint16_t PROGMEM t14_c2_x = 120;
const char* PROGMEM t14_c2_icon = "file name";
const uint8_t PROGMEM t14_c2_mod_source = 0;
const uint8_t PROGMEM t14_c2_mod_invert = 0;
UICType t14_c3;
const char* PROGMEM t14_c3_key = "lfo_mod_freq";
const char* PROGMEM t14_c3_data_type = "DATA";
const uint8_t PROGMEM t14_c3_cc = 39;
const char* PROGMEM t14_c3_text = "MOD OSC";
const char* PROGMEM t14_c3_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t14_c3_min_value = 0;
const char* PROGMEM t14_c3_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t14_c3_mod_gain = 20;
const uint8_t PROGMEM t14_c3_step_value = 1;
const char* PROGMEM t14_c3_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t14_c3_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t14_c3_mod_value = 0;
const uint8_t PROGMEM t14_c3_value = 2;
const char* PROGMEM t14_c3_list_type = "NOTES";
const uint8_t PROGMEM t14_c3_max_value = 100;
const uint16_t PROGMEM t14_c3_y = 50;
const uint16_t PROGMEM t14_c3_x = 220;
const char* PROGMEM t14_c3_icon = "file name";
const uint8_t PROGMEM t14_c3_mod_source = 0;
const uint8_t PROGMEM t14_c3_mod_invert = 0;
UICType t14_c4;
const char* PROGMEM t14_c4_key = "lfo_mod_amp";
const char* PROGMEM t14_c4_data_type = "DATA";
const uint8_t PROGMEM t14_c4_cc = 40;
const char* PROGMEM t14_c4_text = "ModDepth";
const char* PROGMEM t14_c4_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t14_c4_min_value = 1;
const char* PROGMEM t14_c4_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t14_c4_mod_gain = 20;
const uint8_t PROGMEM t14_c4_step_value = 1;
const char* PROGMEM t14_c4_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t14_c4_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t14_c4_mod_value = 0;
const uint8_t PROGMEM t14_c4_value = 15;
const char* PROGMEM t14_c4_list_type = "NOTES";
const uint8_t PROGMEM t14_c4_max_value = 100;
const uint16_t PROGMEM t14_c4_y = 145;
const uint16_t PROGMEM t14_c4_x = 20;
const char* PROGMEM t14_c4_icon = "file name";
const uint8_t PROGMEM t14_c4_mod_source = 0;
const uint8_t PROGMEM t14_c4_mod_invert = 0;
UICType t14_c5;
const char* PROGMEM t14_c5_key = "lfo_shape_freq";
const char* PROGMEM t14_c5_data_type = "DATA";
const uint8_t PROGMEM t14_c5_cc = 41;
const char* PROGMEM t14_c5_text = "ShapeOsc";
const char* PROGMEM t14_c5_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t14_c5_min_value = 0;
const char* PROGMEM t14_c5_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t14_c5_mod_gain = 20;
const uint8_t PROGMEM t14_c5_step_value = 1;
const char* PROGMEM t14_c5_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t14_c5_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t14_c5_mod_value = 0;
const uint8_t PROGMEM t14_c5_value = 10;
const char* PROGMEM t14_c5_list_type = "NOTES";
const uint8_t PROGMEM t14_c5_max_value = 100;
const uint16_t PROGMEM t14_c5_y = 145;
const uint16_t PROGMEM t14_c5_x = 120;
const char* PROGMEM t14_c5_icon = "file name";
const uint8_t PROGMEM t14_c5_mod_source = 0;
const uint8_t PROGMEM t14_c5_mod_invert = 0;
UICType t14_c6;
const char* PROGMEM t14_c6_key = "lfo_shape_amp";
const char* PROGMEM t14_c6_data_type = "DATA";
const uint8_t PROGMEM t14_c6_cc = 42;
const char* PROGMEM t14_c6_text = "ShpDepth";
const char* PROGMEM t14_c6_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t14_c6_min_value = 0;
const char* PROGMEM t14_c6_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t14_c6_mod_gain = 20;
const uint8_t PROGMEM t14_c6_step_value = 1;
const char* PROGMEM t14_c6_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t14_c6_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t14_c6_mod_value = 0;
const uint8_t PROGMEM t14_c6_value = 70;
const char* PROGMEM t14_c6_list_type = "NOTES";
const uint8_t PROGMEM t14_c6_max_value = 100;
const uint16_t PROGMEM t14_c6_y = 145;
const uint16_t PROGMEM t14_c6_x = 220;
const char* PROGMEM t14_c6_icon = "file name";
const uint8_t PROGMEM t14_c6_mod_source = 0;
const uint8_t PROGMEM t14_c6_mod_invert = 0;
UICType t14_controls[] = {t14_c1, t14_c2, t14_c3, t14_c4, t14_c5, t14_c6};
UIMenuType t15;
const char* PROGMEM t15_menu_name = "FUzz";
const uint8_t PROGMEM t15_index = 15;
const char* PROGMEM t15_wallpaper = "/A/V/SYNTHHALL";
const char* PROGMEM t15_description = "Fuzz Settings";
const uint8_t PROGMEM t15_controls_count =  1;
UICType t15_c1;
const char* PROGMEM t15_c1_key = "variable name";
const char* PROGMEM t15_c1_data_type = "DATA";
const uint8_t PROGMEM t15_c1_cc = 43;
const char* PROGMEM t15_c1_text = "menu_name";
const char* PROGMEM t15_c1_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t15_c1_min_value = 0;
const char* PROGMEM t15_c1_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t15_c1_mod_gain = 20;
const uint8_t PROGMEM t15_c1_step_value = 10;
const char* PROGMEM t15_c1_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t15_c1_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t15_c1_mod_value = 0;
const uint8_t PROGMEM t15_c1_value = 50;
const char* PROGMEM t15_c1_list_type = "NOTES";
const uint8_t PROGMEM t15_c1_max_value = 100;
const uint16_t PROGMEM t15_c1_y = 100;
const uint16_t PROGMEM t15_c1_x = 300;
const char* PROGMEM t15_c1_icon = "file name";
const uint8_t PROGMEM t15_c1_mod_source = 0;
const uint8_t PROGMEM t15_c1_mod_invert = 0;
UICType t15_controls[] = {t15_c1};
UIMenuType t16;
const char* PROGMEM t16_menu_name = "Phazer";
const uint8_t PROGMEM t16_index = 16;
const char* PROGMEM t16_wallpaper = "/A/V/DIGITALEYE";
const char* PROGMEM t16_description = "Phazer Settings";
const uint8_t PROGMEM t16_controls_count =  1;
UICType t16_c1;
const char* PROGMEM t16_c1_key = "variable name";
const char* PROGMEM t16_c1_data_type = "DATA";
const uint8_t PROGMEM t16_c1_cc = 44;
const char* PROGMEM t16_c1_text = "menu_name";
const char* PROGMEM t16_c1_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t16_c1_min_value = 0;
const char* PROGMEM t16_c1_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t16_c1_mod_gain = 20;
const uint8_t PROGMEM t16_c1_step_value = 10;
const char* PROGMEM t16_c1_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t16_c1_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t16_c1_mod_value = 0;
const uint8_t PROGMEM t16_c1_value = 50;
const char* PROGMEM t16_c1_list_type = "NOTES";
const uint8_t PROGMEM t16_c1_max_value = 100;
const uint16_t PROGMEM t16_c1_y = 200;
const uint16_t PROGMEM t16_c1_x = 50;
const char* PROGMEM t16_c1_icon = "file name";
const uint8_t PROGMEM t16_c1_mod_source = 0;
const uint8_t PROGMEM t16_c1_mod_invert = 0;
UICType t16_controls[] = {t16_c1};
UIMenuType t17;
const char* PROGMEM t17_menu_name = "Synth Voice";
const uint8_t PROGMEM t17_index = 17;
const char* PROGMEM t17_wallpaper = "/A/V/WRMMM";
const char* PROGMEM t17_description = "Synth Voicing";
const uint8_t PROGMEM t17_controls_count =  9;
UICType t17_c1;
const char* PROGMEM t17_c1_key = "afo_shape_freq";
const char* PROGMEM t17_c1_data_type = "DATA";
const uint8_t PROGMEM t17_c1_cc = 45;
const char* PROGMEM t17_c1_text = "MorphOsc";
const char* PROGMEM t17_c1_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t17_c1_min_value = 0;
const char* PROGMEM t17_c1_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t17_c1_mod_gain = 20;
const uint8_t PROGMEM t17_c1_step_value = 1;
const char* PROGMEM t17_c1_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t17_c1_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t17_c1_mod_value = 0;
const uint8_t PROGMEM t17_c1_value = 13;
const char* PROGMEM t17_c1_list_type = "NOTES";
const uint8_t PROGMEM t17_c1_max_value = 100;
const uint16_t PROGMEM t17_c1_y = 50;
const uint16_t PROGMEM t17_c1_x = 20;
const char* PROGMEM t17_c1_icon = "file name";
const uint8_t PROGMEM t17_c1_mod_source = 0;
const uint8_t PROGMEM t17_c1_mod_invert = 0;
UICType t17_c2;
const char* PROGMEM t17_c2_key = "afo_waveform_morph";
const char* PROGMEM t17_c2_data_type = "DATA";
const uint8_t PROGMEM t17_c2_cc = 46;
const char* PROGMEM t17_c2_text = "xMorph";
const char* PROGMEM t17_c2_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t17_c2_min_value = 0;
const char* PROGMEM t17_c2_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t17_c2_mod_gain = 0;
const uint8_t PROGMEM t17_c2_step_value = 1;
const char* PROGMEM t17_c2_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t17_c2_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t17_c2_mod_value = 0;
const uint8_t PROGMEM t17_c2_value = 1;
const char* PROGMEM t17_c2_list_type = "NOTES";
const uint8_t PROGMEM t17_c2_max_value = 100;
const uint16_t PROGMEM t17_c2_y = 50;
const uint16_t PROGMEM t17_c2_x = 120;
const char* PROGMEM t17_c2_icon = "file name";
const uint8_t PROGMEM t17_c2_mod_source = 0;
const uint8_t PROGMEM t17_c2_mod_invert = 0;
UICType t17_c3;
const char* PROGMEM t17_c3_key = "wavetable_index_a";
const char* PROGMEM t17_c3_data_type = "DATA";
const uint8_t PROGMEM t17_c3_cc = 47;
const char* PROGMEM t17_c3_text = "Wave A";
const char* PROGMEM t17_c3_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t17_c3_min_value = 0;
const char* PROGMEM t17_c3_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t17_c3_mod_gain = 20;
const uint8_t PROGMEM t17_c3_step_value = 1;
const char* PROGMEM t17_c3_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t17_c3_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t17_c3_mod_value = 0;
const uint8_t PROGMEM t17_c3_value = 10;
const char* PROGMEM t17_c3_list_type = "NOTES";
const uint8_t PROGMEM t17_c3_max_value = 127;
const uint16_t PROGMEM t17_c3_y = 50;
const uint16_t PROGMEM t17_c3_x = 220;
const char* PROGMEM t17_c3_icon = "file name";
const uint8_t PROGMEM t17_c3_mod_source = 0;
const uint8_t PROGMEM t17_c3_mod_invert = 0;
UICType t17_c4;
const char* PROGMEM t17_c4_key = "wavetable_index_b";
const char* PROGMEM t17_c4_data_type = "DATA";
const uint8_t PROGMEM t17_c4_cc = 48;
const char* PROGMEM t17_c4_text = "Wave B";
const char* PROGMEM t17_c4_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t17_c4_min_value = 0;
const char* PROGMEM t17_c4_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t17_c4_mod_gain = 20;
const uint8_t PROGMEM t17_c4_step_value = 1;
const char* PROGMEM t17_c4_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t17_c4_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t17_c4_mod_value = 0;
const uint8_t PROGMEM t17_c4_value = 50;
const char* PROGMEM t17_c4_list_type = "NOTES";
const uint8_t PROGMEM t17_c4_max_value = 127;
const uint16_t PROGMEM t17_c4_y = 145;
const uint16_t PROGMEM t17_c4_x = 20;
const char* PROGMEM t17_c4_icon = "file name";
const uint8_t PROGMEM t17_c4_mod_source = 0;
const uint8_t PROGMEM t17_c4_mod_invert = 0;
UICType t17_c5;
const char* PROGMEM t17_c5_key = "synth_env_attack";
const char* PROGMEM t17_c5_data_type = "DATA";
const uint8_t PROGMEM t17_c5_cc = 49;
const char* PROGMEM t17_c5_text = "Attack";
const char* PROGMEM t17_c5_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t17_c5_min_value = 0;
const char* PROGMEM t17_c5_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t17_c5_mod_gain = 20;
const uint8_t PROGMEM t17_c5_step_value = 10;
const char* PROGMEM t17_c5_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t17_c5_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t17_c5_mod_value = 0;
const uint8_t PROGMEM t17_c5_value = 80;
const char* PROGMEM t17_c5_list_type = "NOTES";
const uint8_t PROGMEM t17_c5_max_value = 100;
const uint16_t PROGMEM t17_c5_y = 145;
const uint16_t PROGMEM t17_c5_x = 120;
const char* PROGMEM t17_c5_icon = "file name";
const uint8_t PROGMEM t17_c5_mod_source = 0;
const uint8_t PROGMEM t17_c5_mod_invert = 0;
UICType t17_c6;
const char* PROGMEM t17_c6_key = "synth_env_decay";
const char* PROGMEM t17_c6_data_type = "DATA";
const uint8_t PROGMEM t17_c6_cc = 50;
const char* PROGMEM t17_c6_text = "Decay";
const char* PROGMEM t17_c6_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t17_c6_min_value = 0;
const char* PROGMEM t17_c6_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t17_c6_mod_gain = 20;
const uint8_t PROGMEM t17_c6_step_value = 10;
const char* PROGMEM t17_c6_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t17_c6_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t17_c6_mod_value = 0;
const uint8_t PROGMEM t17_c6_value = 50;
const char* PROGMEM t17_c6_list_type = "NOTES";
const uint8_t PROGMEM t17_c6_max_value = 100;
const uint16_t PROGMEM t17_c6_y = 145;
const uint16_t PROGMEM t17_c6_x = 220;
const char* PROGMEM t17_c6_icon = "file name";
const uint8_t PROGMEM t17_c6_mod_source = 0;
const uint8_t PROGMEM t17_c6_mod_invert = 0;
UICType t17_c7;
const char* PROGMEM t17_c7_key = "afo_waveform_type";
const char* PROGMEM t17_c7_data_type = "DATA";
const uint8_t PROGMEM t17_c7_cc = 51;
const char* PROGMEM t17_c7_text = "Shape";
const char* PROGMEM t17_c7_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t17_c7_min_value = 0;
const char* PROGMEM t17_c7_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t17_c7_mod_gain = 20;
const uint8_t PROGMEM t17_c7_step_value = 1;
const char* PROGMEM t17_c7_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t17_c7_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t17_c7_mod_value = 0;
const uint8_t PROGMEM t17_c7_value = 1;
const char* PROGMEM t17_c7_list_type = "NOTES";
const uint8_t PROGMEM t17_c7_max_value = 5;
const uint16_t PROGMEM t17_c7_y = 50;
const uint16_t PROGMEM t17_c7_x = 20;
const char* PROGMEM t17_c7_icon = "file name";
const uint8_t PROGMEM t17_c7_mod_source = 0;
const uint8_t PROGMEM t17_c7_mod_invert = 0;
UICType t17_c8;
const char* PROGMEM t17_c8_key = "afo_mod";
const char* PROGMEM t17_c8_data_type = "DATA";
const uint8_t PROGMEM t17_c8_cc = 52;
const char* PROGMEM t17_c8_text = "Mod";
const char* PROGMEM t17_c8_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t17_c8_min_value = 0;
const char* PROGMEM t17_c8_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t17_c8_mod_gain = 20;
const uint8_t PROGMEM t17_c8_step_value = 1;
const char* PROGMEM t17_c8_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t17_c8_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t17_c8_mod_value = 0;
const uint8_t PROGMEM t17_c8_value = 1;
const char* PROGMEM t17_c8_list_type = "NOTES";
const uint8_t PROGMEM t17_c8_max_value = 100;
const uint16_t PROGMEM t17_c8_y = 50;
const uint16_t PROGMEM t17_c8_x = 120;
const char* PROGMEM t17_c8_icon = "file name";
const uint8_t PROGMEM t17_c8_mod_source = 0;
const uint8_t PROGMEM t17_c8_mod_invert = 0;
UICType t17_c9;
const char* PROGMEM t17_c9_key = "synth_waveshape";
const char* PROGMEM t17_c9_data_type = "DATA";
const uint8_t PROGMEM t17_c9_cc = 53;
const char* PROGMEM t17_c9_text = "WaveComp";
const char* PROGMEM t17_c9_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t17_c9_min_value = 0;
const char* PROGMEM t17_c9_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t17_c9_mod_gain = 0;
const uint8_t PROGMEM t17_c9_step_value = 1;
const char* PROGMEM t17_c9_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t17_c9_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t17_c9_mod_value = 0;
const uint8_t PROGMEM t17_c9_value = 2;
const char* PROGMEM t17_c9_list_type = "NOTES";
const uint8_t PROGMEM t17_c9_max_value = 18;
const uint16_t PROGMEM t17_c9_y = 50;
const uint16_t PROGMEM t17_c9_x = 220;
const char* PROGMEM t17_c9_icon = "file name";
const uint8_t PROGMEM t17_c9_mod_source = 0;
const uint8_t PROGMEM t17_c9_mod_invert = 0;
UICType t17_controls[] = {t17_c1, t17_c2, t17_c3, t17_c4, t17_c5, t17_c6, t17_c7, t17_c8, t17_c9};
UIMenuType t18;
const char* PROGMEM t18_menu_name = "Exp Modulate";
const uint8_t PROGMEM t18_index = 18;
const char* PROGMEM t18_wallpaper = "/A/V/HEXXX";
const char* PROGMEM t18_description = "Modulator Settings";
const uint8_t PROGMEM t18_controls_count =  1;
UICType t18_c1;
const char* PROGMEM t18_c1_key = "variable name";
const char* PROGMEM t18_c1_data_type = "DATA";
const uint8_t PROGMEM t18_c1_cc = 70;
const char* PROGMEM t18_c1_text = "menu_name";
const char* PROGMEM t18_c1_path_4 = "/A/I/U/R/YELLOW";
const uint8_t PROGMEM t18_c1_min_value = 0;
const char* PROGMEM t18_c1_path_2 = "/A/I/U/R/GREEN";
const uint8_t PROGMEM t18_c1_mod_gain = 20;
const uint8_t PROGMEM t18_c1_step_value = 10;
const char* PROGMEM t18_c1_path_1 = "/A/I/U/R/MAGENTA";
const char* PROGMEM t18_c1_path_3 = "/A/I/U/R/TEAL";
const uint8_t PROGMEM t18_c1_mod_value = 0;
const uint8_t PROGMEM t18_c1_value = 50;
const char* PROGMEM t18_c1_list_type = "NOTES";
const uint8_t PROGMEM t18_c1_max_value = 100;
const uint16_t PROGMEM t18_c1_y = 90;
const uint16_t PROGMEM t18_c1_x = 90;
const char* PROGMEM t18_c1_icon = "file name";
const uint8_t PROGMEM t18_c1_mod_source = 0;
const uint8_t PROGMEM t18_c1_mod_invert = 0;
UICType t18_controls[] = {t18_c1};
UIMenuType t19;
const char* PROGMEM t19_menu_name = "Spectrum";
const uint8_t PROGMEM t19_index = 19;
const char* PROGMEM t19_wallpaper = "/A/V/PINKDOTS";
const char* PROGMEM t19_description = "Spectrum Analyzer";
const uint8_t PROGMEM t19_controls_count =  0;
UICType t19_controls[] = {};
UIMenuType t20;
const char* PROGMEM t20_menu_name = "Oscilloscope";
const uint8_t PROGMEM t20_index = 20;
const char* PROGMEM t20_wallpaper = "/A/V/GRNDOTS";
const char* PROGMEM t20_description = "Oscilloscope";
const uint8_t PROGMEM t20_controls_count =  0;
UICType t20_controls[] = {};
UIMenuType ui_menus[] = {t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20};


//init UIC data structs
void initUICData(){
	t1.menu_name = &t1_menu_name[0];
	t1.index = t1_index;
	t1.wallpaper = &t1_wallpaper[0];
	t1.description = &t1_description[0];
	t1.controls_count = t1_controls_count;
	t1.controls = &t1_controls[0];
	t1_c1.key = &t1_c1_key[0];
	t1_c1.data_type = &t1_c1_data_type[0];
	t1_c1.cc = t1_c1_cc;
	t1_c1.text = &t1_c1_text[0];
	t1_c1.path_4 = &t1_c1_path_4[0];
	t1_c1.min_value = t1_c1_min_value;
	t1_c1.path_2 = &t1_c1_path_2[0];
	t1_c1.mod_gain = t1_c1_mod_gain;
	t1_c1.step_value = t1_c1_step_value;
	t1_c1.path_1 = &t1_c1_path_1[0];
	t1_c1.path_3 = &t1_c1_path_3[0];
	t1_c1.mod_value = t1_c1_mod_value;
	t1_c1.value = t1_c1_value;
	t1_c1.list_type = &t1_c1_list_type[0];
	t1_c1.max_value = t1_c1_max_value;
	t1_c1.y = t1_c1_y;
	t1_c1.x = t1_c1_x;
	t1_c1.icon = &t1_c1_icon[0];
	t1_c1.mod_source = t1_c1_mod_source;
	t1_c1.mod_invert = t1_c1_mod_invert;
	t2.menu_name = &t2_menu_name[0];
	t2.index = t2_index;
	t2.wallpaper = &t2_wallpaper[0];
	t2.description = &t2_description[0];
	t2.controls_count = t2_controls_count;
	t2.controls = &t2_controls[0];
	t2_c1.key = &t2_c1_key[0];
	t2_c1.data_type = &t2_c1_data_type[0];
	t2_c1.cc = t2_c1_cc;
	t2_c1.text = &t2_c1_text[0];
	t2_c1.path_4 = &t2_c1_path_4[0];
	t2_c1.min_value = t2_c1_min_value;
	t2_c1.path_2 = &t2_c1_path_2[0];
	t2_c1.mod_gain = t2_c1_mod_gain;
	t2_c1.step_value = t2_c1_step_value;
	t2_c1.path_1 = &t2_c1_path_1[0];
	t2_c1.path_3 = &t2_c1_path_3[0];
	t2_c1.mod_value = t2_c1_mod_value;
	t2_c1.value = t2_c1_value;
	t2_c1.list_type = &t2_c1_list_type[0];
	t2_c1.max_value = t2_c1_max_value;
	t2_c1.y = t2_c1_y;
	t2_c1.x = t2_c1_x;
	t2_c1.icon = &t2_c1_icon[0];
	t2_c1.mod_source = t2_c1_mod_source;
	t2_c1.mod_invert = t2_c1_mod_invert;
	t2_c2.key = &t2_c2_key[0];
	t2_c2.data_type = &t2_c2_data_type[0];
	t2_c2.cc = t2_c2_cc;
	t2_c2.text = &t2_c2_text[0];
	t2_c2.path_4 = &t2_c2_path_4[0];
	t2_c2.min_value = t2_c2_min_value;
	t2_c2.path_2 = &t2_c2_path_2[0];
	t2_c2.mod_gain = t2_c2_mod_gain;
	t2_c2.step_value = t2_c2_step_value;
	t2_c2.path_1 = &t2_c2_path_1[0];
	t2_c2.path_3 = &t2_c2_path_3[0];
	t2_c2.mod_value = t2_c2_mod_value;
	t2_c2.value = t2_c2_value;
	t2_c2.list_type = &t2_c2_list_type[0];
	t2_c2.max_value = t2_c2_max_value;
	t2_c2.y = t2_c2_y;
	t2_c2.x = t2_c2_x;
	t2_c2.icon = &t2_c2_icon[0];
	t2_c2.mod_source = t2_c2_mod_source;
	t2_c2.mod_invert = t2_c2_mod_invert;
	t2_c3.key = &t2_c3_key[0];
	t2_c3.data_type = &t2_c3_data_type[0];
	t2_c3.cc = t2_c3_cc;
	t2_c3.text = &t2_c3_text[0];
	t2_c3.path_4 = &t2_c3_path_4[0];
	t2_c3.min_value = t2_c3_min_value;
	t2_c3.path_2 = &t2_c3_path_2[0];
	t2_c3.mod_gain = t2_c3_mod_gain;
	t2_c3.step_value = t2_c3_step_value;
	t2_c3.path_1 = &t2_c3_path_1[0];
	t2_c3.path_3 = &t2_c3_path_3[0];
	t2_c3.mod_value = t2_c3_mod_value;
	t2_c3.value = t2_c3_value;
	t2_c3.list_type = &t2_c3_list_type[0];
	t2_c3.max_value = t2_c3_max_value;
	t2_c3.y = t2_c3_y;
	t2_c3.x = t2_c3_x;
	t2_c3.icon = &t2_c3_icon[0];
	t2_c3.mod_source = t2_c3_mod_source;
	t2_c3.mod_invert = t2_c3_mod_invert;
	t2_c4.key = &t2_c4_key[0];
	t2_c4.data_type = &t2_c4_data_type[0];
	t2_c4.cc = t2_c4_cc;
	t2_c4.text = &t2_c4_text[0];
	t2_c4.path_4 = &t2_c4_path_4[0];
	t2_c4.min_value = t2_c4_min_value;
	t2_c4.path_2 = &t2_c4_path_2[0];
	t2_c4.mod_gain = t2_c4_mod_gain;
	t2_c4.step_value = t2_c4_step_value;
	t2_c4.path_1 = &t2_c4_path_1[0];
	t2_c4.path_3 = &t2_c4_path_3[0];
	t2_c4.mod_value = t2_c4_mod_value;
	t2_c4.value = t2_c4_value;
	t2_c4.list_type = &t2_c4_list_type[0];
	t2_c4.max_value = t2_c4_max_value;
	t2_c4.y = t2_c4_y;
	t2_c4.x = t2_c4_x;
	t2_c4.icon = &t2_c4_icon[0];
	t2_c4.mod_source = t2_c4_mod_source;
	t2_c4.mod_invert = t2_c4_mod_invert;
	t2_c5.key = &t2_c5_key[0];
	t2_c5.data_type = &t2_c5_data_type[0];
	t2_c5.cc = t2_c5_cc;
	t2_c5.text = &t2_c5_text[0];
	t2_c5.path_4 = &t2_c5_path_4[0];
	t2_c5.min_value = t2_c5_min_value;
	t2_c5.path_2 = &t2_c5_path_2[0];
	t2_c5.mod_gain = t2_c5_mod_gain;
	t2_c5.step_value = t2_c5_step_value;
	t2_c5.path_1 = &t2_c5_path_1[0];
	t2_c5.path_3 = &t2_c5_path_3[0];
	t2_c5.mod_value = t2_c5_mod_value;
	t2_c5.value = t2_c5_value;
	t2_c5.list_type = &t2_c5_list_type[0];
	t2_c5.max_value = t2_c5_max_value;
	t2_c5.y = t2_c5_y;
	t2_c5.x = t2_c5_x;
	t2_c5.icon = &t2_c5_icon[0];
	t2_c5.mod_source = t2_c5_mod_source;
	t2_c5.mod_invert = t2_c5_mod_invert;
	t2_c6.key = &t2_c6_key[0];
	t2_c6.data_type = &t2_c6_data_type[0];
	t2_c6.cc = t2_c6_cc;
	t2_c6.text = &t2_c6_text[0];
	t2_c6.path_4 = &t2_c6_path_4[0];
	t2_c6.min_value = t2_c6_min_value;
	t2_c6.path_2 = &t2_c6_path_2[0];
	t2_c6.mod_gain = t2_c6_mod_gain;
	t2_c6.step_value = t2_c6_step_value;
	t2_c6.path_1 = &t2_c6_path_1[0];
	t2_c6.path_3 = &t2_c6_path_3[0];
	t2_c6.mod_value = t2_c6_mod_value;
	t2_c6.value = t2_c6_value;
	t2_c6.list_type = &t2_c6_list_type[0];
	t2_c6.max_value = t2_c6_max_value;
	t2_c6.y = t2_c6_y;
	t2_c6.x = t2_c6_x;
	t2_c6.icon = &t2_c6_icon[0];
	t2_c6.mod_source = t2_c6_mod_source;
	t2_c6.mod_invert = t2_c6_mod_invert;
	t3.menu_name = &t3_menu_name[0];
	t3.index = t3_index;
	t3.wallpaper = &t3_wallpaper[0];
	t3.description = &t3_description[0];
	t3.controls_count = t3_controls_count;
	t3.controls = &t3_controls[0];
	t3_c1.key = &t3_c1_key[0];
	t3_c1.data_type = &t3_c1_data_type[0];
	t3_c1.cc = t3_c1_cc;
	t3_c1.text = &t3_c1_text[0];
	t3_c1.path_4 = &t3_c1_path_4[0];
	t3_c1.min_value = t3_c1_min_value;
	t3_c1.path_2 = &t3_c1_path_2[0];
	t3_c1.mod_gain = t3_c1_mod_gain;
	t3_c1.step_value = t3_c1_step_value;
	t3_c1.path_1 = &t3_c1_path_1[0];
	t3_c1.path_3 = &t3_c1_path_3[0];
	t3_c1.mod_value = t3_c1_mod_value;
	t3_c1.value = t3_c1_value;
	t3_c1.list_type = &t3_c1_list_type[0];
	t3_c1.max_value = t3_c1_max_value;
	t3_c1.y = t3_c1_y;
	t3_c1.x = t3_c1_x;
	t3_c1.icon = &t3_c1_icon[0];
	t3_c1.mod_source = t3_c1_mod_source;
	t3_c1.mod_invert = t3_c1_mod_invert;
	t4.menu_name = &t4_menu_name[0];
	t4.index = t4_index;
	t4.wallpaper = &t4_wallpaper[0];
	t4.description = &t4_description[0];
	t4.controls_count = t4_controls_count;
	t4.controls = &t4_controls[0];
	t4_c1.key = &t4_c1_key[0];
	t4_c1.data_type = &t4_c1_data_type[0];
	t4_c1.cc = t4_c1_cc;
	t4_c1.text = &t4_c1_text[0];
	t4_c1.path_4 = &t4_c1_path_4[0];
	t4_c1.min_value = t4_c1_min_value;
	t4_c1.path_2 = &t4_c1_path_2[0];
	t4_c1.mod_gain = t4_c1_mod_gain;
	t4_c1.step_value = t4_c1_step_value;
	t4_c1.path_1 = &t4_c1_path_1[0];
	t4_c1.path_3 = &t4_c1_path_3[0];
	t4_c1.mod_value = t4_c1_mod_value;
	t4_c1.value = t4_c1_value;
	t4_c1.list_type = &t4_c1_list_type[0];
	t4_c1.max_value = t4_c1_max_value;
	t4_c1.y = t4_c1_y;
	t4_c1.x = t4_c1_x;
	t4_c1.icon = &t4_c1_icon[0];
	t4_c1.mod_source = t4_c1_mod_source;
	t4_c1.mod_invert = t4_c1_mod_invert;
	t5.menu_name = &t5_menu_name[0];
	t5.index = t5_index;
	t5.wallpaper = &t5_wallpaper[0];
	t5.description = &t5_description[0];
	t5.controls_count = t5_controls_count;
	t5.controls = &t5_controls[0];
	t5_c1.key = &t5_c1_key[0];
	t5_c1.data_type = &t5_c1_data_type[0];
	t5_c1.cc = t5_c1_cc;
	t5_c1.text = &t5_c1_text[0];
	t5_c1.path_4 = &t5_c1_path_4[0];
	t5_c1.min_value = t5_c1_min_value;
	t5_c1.path_2 = &t5_c1_path_2[0];
	t5_c1.mod_gain = t5_c1_mod_gain;
	t5_c1.step_value = t5_c1_step_value;
	t5_c1.path_1 = &t5_c1_path_1[0];
	t5_c1.path_3 = &t5_c1_path_3[0];
	t5_c1.mod_value = t5_c1_mod_value;
	t5_c1.value = t5_c1_value;
	t5_c1.list_type = &t5_c1_list_type[0];
	t5_c1.max_value = t5_c1_max_value;
	t5_c1.y = t5_c1_y;
	t5_c1.x = t5_c1_x;
	t5_c1.icon = &t5_c1_icon[0];
	t5_c1.mod_source = t5_c1_mod_source;
	t5_c1.mod_invert = t5_c1_mod_invert;
	t5_c2.key = &t5_c2_key[0];
	t5_c2.data_type = &t5_c2_data_type[0];
	t5_c2.cc = t5_c2_cc;
	t5_c2.text = &t5_c2_text[0];
	t5_c2.path_4 = &t5_c2_path_4[0];
	t5_c2.min_value = t5_c2_min_value;
	t5_c2.path_2 = &t5_c2_path_2[0];
	t5_c2.mod_gain = t5_c2_mod_gain;
	t5_c2.step_value = t5_c2_step_value;
	t5_c2.path_1 = &t5_c2_path_1[0];
	t5_c2.path_3 = &t5_c2_path_3[0];
	t5_c2.mod_value = t5_c2_mod_value;
	t5_c2.value = t5_c2_value;
	t5_c2.list_type = &t5_c2_list_type[0];
	t5_c2.max_value = t5_c2_max_value;
	t5_c2.y = t5_c2_y;
	t5_c2.x = t5_c2_x;
	t5_c2.icon = &t5_c2_icon[0];
	t5_c2.mod_source = t5_c2_mod_source;
	t5_c2.mod_invert = t5_c2_mod_invert;
	t5_c3.key = &t5_c3_key[0];
	t5_c3.data_type = &t5_c3_data_type[0];
	t5_c3.cc = t5_c3_cc;
	t5_c3.text = &t5_c3_text[0];
	t5_c3.path_4 = &t5_c3_path_4[0];
	t5_c3.min_value = t5_c3_min_value;
	t5_c3.path_2 = &t5_c3_path_2[0];
	t5_c3.mod_gain = t5_c3_mod_gain;
	t5_c3.step_value = t5_c3_step_value;
	t5_c3.path_1 = &t5_c3_path_1[0];
	t5_c3.path_3 = &t5_c3_path_3[0];
	t5_c3.mod_value = t5_c3_mod_value;
	t5_c3.value = t5_c3_value;
	t5_c3.list_type = &t5_c3_list_type[0];
	t5_c3.max_value = t5_c3_max_value;
	t5_c3.y = t5_c3_y;
	t5_c3.x = t5_c3_x;
	t5_c3.icon = &t5_c3_icon[0];
	t5_c3.mod_source = t5_c3_mod_source;
	t5_c3.mod_invert = t5_c3_mod_invert;
	t5_c4.key = &t5_c4_key[0];
	t5_c4.data_type = &t5_c4_data_type[0];
	t5_c4.cc = t5_c4_cc;
	t5_c4.text = &t5_c4_text[0];
	t5_c4.path_4 = &t5_c4_path_4[0];
	t5_c4.min_value = t5_c4_min_value;
	t5_c4.path_2 = &t5_c4_path_2[0];
	t5_c4.mod_gain = t5_c4_mod_gain;
	t5_c4.step_value = t5_c4_step_value;
	t5_c4.path_1 = &t5_c4_path_1[0];
	t5_c4.path_3 = &t5_c4_path_3[0];
	t5_c4.mod_value = t5_c4_mod_value;
	t5_c4.value = t5_c4_value;
	t5_c4.list_type = &t5_c4_list_type[0];
	t5_c4.max_value = t5_c4_max_value;
	t5_c4.y = t5_c4_y;
	t5_c4.x = t5_c4_x;
	t5_c4.icon = &t5_c4_icon[0];
	t5_c4.mod_source = t5_c4_mod_source;
	t5_c4.mod_invert = t5_c4_mod_invert;
	t6.menu_name = &t6_menu_name[0];
	t6.index = t6_index;
	t6.wallpaper = &t6_wallpaper[0];
	t6.description = &t6_description[0];
	t6.controls_count = t6_controls_count;
	t6.controls = &t6_controls[0];
	t7.menu_name = &t7_menu_name[0];
	t7.index = t7_index;
	t7.wallpaper = &t7_wallpaper[0];
	t7.description = &t7_description[0];
	t7.controls_count = t7_controls_count;
	t7.controls = &t7_controls[0];
	t7_c1.key = &t7_c1_key[0];
	t7_c1.data_type = &t7_c1_data_type[0];
	t7_c1.cc = t7_c1_cc;
	t7_c1.text = &t7_c1_text[0];
	t7_c1.path_4 = &t7_c1_path_4[0];
	t7_c1.min_value = t7_c1_min_value;
	t7_c1.path_2 = &t7_c1_path_2[0];
	t7_c1.mod_gain = t7_c1_mod_gain;
	t7_c1.step_value = t7_c1_step_value;
	t7_c1.path_1 = &t7_c1_path_1[0];
	t7_c1.path_3 = &t7_c1_path_3[0];
	t7_c1.mod_value = t7_c1_mod_value;
	t7_c1.value = t7_c1_value;
	t7_c1.list_type = &t7_c1_list_type[0];
	t7_c1.max_value = t7_c1_max_value;
	t7_c1.y = t7_c1_y;
	t7_c1.x = t7_c1_x;
	t7_c1.icon = &t7_c1_icon[0];
	t7_c1.mod_source = t7_c1_mod_source;
	t7_c1.mod_invert = t7_c1_mod_invert;
	t8.menu_name = &t8_menu_name[0];
	t8.index = t8_index;
	t8.wallpaper = &t8_wallpaper[0];
	t8.description = &t8_description[0];
	t8.controls_count = t8_controls_count;
	t8.controls = &t8_controls[0];
	t8_c1.key = &t8_c1_key[0];
	t8_c1.data_type = &t8_c1_data_type[0];
	t8_c1.cc = t8_c1_cc;
	t8_c1.text = &t8_c1_text[0];
	t8_c1.path_4 = &t8_c1_path_4[0];
	t8_c1.min_value = t8_c1_min_value;
	t8_c1.path_2 = &t8_c1_path_2[0];
	t8_c1.mod_gain = t8_c1_mod_gain;
	t8_c1.step_value = t8_c1_step_value;
	t8_c1.path_1 = &t8_c1_path_1[0];
	t8_c1.path_3 = &t8_c1_path_3[0];
	t8_c1.mod_value = t8_c1_mod_value;
	t8_c1.value = t8_c1_value;
	t8_c1.list_type = &t8_c1_list_type[0];
	t8_c1.max_value = t8_c1_max_value;
	t8_c1.y = t8_c1_y;
	t8_c1.x = t8_c1_x;
	t8_c1.icon = &t8_c1_icon[0];
	t8_c1.mod_source = t8_c1_mod_source;
	t8_c1.mod_invert = t8_c1_mod_invert;
	t9.menu_name = &t9_menu_name[0];
	t9.index = t9_index;
	t9.wallpaper = &t9_wallpaper[0];
	t9.description = &t9_description[0];
	t9.controls_count = t9_controls_count;
	t9.controls = &t9_controls[0];
	t9_c1.key = &t9_c1_key[0];
	t9_c1.data_type = &t9_c1_data_type[0];
	t9_c1.cc = t9_c1_cc;
	t9_c1.text = &t9_c1_text[0];
	t9_c1.path_4 = &t9_c1_path_4[0];
	t9_c1.min_value = t9_c1_min_value;
	t9_c1.path_2 = &t9_c1_path_2[0];
	t9_c1.mod_gain = t9_c1_mod_gain;
	t9_c1.step_value = t9_c1_step_value;
	t9_c1.path_1 = &t9_c1_path_1[0];
	t9_c1.path_3 = &t9_c1_path_3[0];
	t9_c1.mod_value = t9_c1_mod_value;
	t9_c1.value = t9_c1_value;
	t9_c1.list_type = &t9_c1_list_type[0];
	t9_c1.max_value = t9_c1_max_value;
	t9_c1.y = t9_c1_y;
	t9_c1.x = t9_c1_x;
	t9_c1.icon = &t9_c1_icon[0];
	t9_c1.mod_source = t9_c1_mod_source;
	t9_c1.mod_invert = t9_c1_mod_invert;
	t9_c2.key = &t9_c2_key[0];
	t9_c2.data_type = &t9_c2_data_type[0];
	t9_c2.cc = t9_c2_cc;
	t9_c2.text = &t9_c2_text[0];
	t9_c2.path_4 = &t9_c2_path_4[0];
	t9_c2.min_value = t9_c2_min_value;
	t9_c2.path_2 = &t9_c2_path_2[0];
	t9_c2.mod_gain = t9_c2_mod_gain;
	t9_c2.step_value = t9_c2_step_value;
	t9_c2.path_1 = &t9_c2_path_1[0];
	t9_c2.path_3 = &t9_c2_path_3[0];
	t9_c2.mod_value = t9_c2_mod_value;
	t9_c2.value = t9_c2_value;
	t9_c2.list_type = &t9_c2_list_type[0];
	t9_c2.max_value = t9_c2_max_value;
	t9_c2.y = t9_c2_y;
	t9_c2.x = t9_c2_x;
	t9_c2.icon = &t9_c2_icon[0];
	t9_c2.mod_source = t9_c2_mod_source;
	t9_c2.mod_invert = t9_c2_mod_invert;
	t9_c3.key = &t9_c3_key[0];
	t9_c3.data_type = &t9_c3_data_type[0];
	t9_c3.cc = t9_c3_cc;
	t9_c3.text = &t9_c3_text[0];
	t9_c3.path_4 = &t9_c3_path_4[0];
	t9_c3.min_value = t9_c3_min_value;
	t9_c3.path_2 = &t9_c3_path_2[0];
	t9_c3.mod_gain = t9_c3_mod_gain;
	t9_c3.step_value = t9_c3_step_value;
	t9_c3.path_1 = &t9_c3_path_1[0];
	t9_c3.path_3 = &t9_c3_path_3[0];
	t9_c3.mod_value = t9_c3_mod_value;
	t9_c3.value = t9_c3_value;
	t9_c3.list_type = &t9_c3_list_type[0];
	t9_c3.max_value = t9_c3_max_value;
	t9_c3.y = t9_c3_y;
	t9_c3.x = t9_c3_x;
	t9_c3.icon = &t9_c3_icon[0];
	t9_c3.mod_source = t9_c3_mod_source;
	t9_c3.mod_invert = t9_c3_mod_invert;
	t9_c4.key = &t9_c4_key[0];
	t9_c4.data_type = &t9_c4_data_type[0];
	t9_c4.cc = t9_c4_cc;
	t9_c4.text = &t9_c4_text[0];
	t9_c4.path_4 = &t9_c4_path_4[0];
	t9_c4.min_value = t9_c4_min_value;
	t9_c4.path_2 = &t9_c4_path_2[0];
	t9_c4.mod_gain = t9_c4_mod_gain;
	t9_c4.step_value = t9_c4_step_value;
	t9_c4.path_1 = &t9_c4_path_1[0];
	t9_c4.path_3 = &t9_c4_path_3[0];
	t9_c4.mod_value = t9_c4_mod_value;
	t9_c4.value = t9_c4_value;
	t9_c4.list_type = &t9_c4_list_type[0];
	t9_c4.max_value = t9_c4_max_value;
	t9_c4.y = t9_c4_y;
	t9_c4.x = t9_c4_x;
	t9_c4.icon = &t9_c4_icon[0];
	t9_c4.mod_source = t9_c4_mod_source;
	t9_c4.mod_invert = t9_c4_mod_invert;
	t9_c5.key = &t9_c5_key[0];
	t9_c5.data_type = &t9_c5_data_type[0];
	t9_c5.cc = t9_c5_cc;
	t9_c5.text = &t9_c5_text[0];
	t9_c5.path_4 = &t9_c5_path_4[0];
	t9_c5.min_value = t9_c5_min_value;
	t9_c5.path_2 = &t9_c5_path_2[0];
	t9_c5.mod_gain = t9_c5_mod_gain;
	t9_c5.step_value = t9_c5_step_value;
	t9_c5.path_1 = &t9_c5_path_1[0];
	t9_c5.path_3 = &t9_c5_path_3[0];
	t9_c5.mod_value = t9_c5_mod_value;
	t9_c5.value = t9_c5_value;
	t9_c5.list_type = &t9_c5_list_type[0];
	t9_c5.max_value = t9_c5_max_value;
	t9_c5.y = t9_c5_y;
	t9_c5.x = t9_c5_x;
	t9_c5.icon = &t9_c5_icon[0];
	t9_c5.mod_source = t9_c5_mod_source;
	t9_c5.mod_invert = t9_c5_mod_invert;
	t9_c6.key = &t9_c6_key[0];
	t9_c6.data_type = &t9_c6_data_type[0];
	t9_c6.cc = t9_c6_cc;
	t9_c6.text = &t9_c6_text[0];
	t9_c6.path_4 = &t9_c6_path_4[0];
	t9_c6.min_value = t9_c6_min_value;
	t9_c6.path_2 = &t9_c6_path_2[0];
	t9_c6.mod_gain = t9_c6_mod_gain;
	t9_c6.step_value = t9_c6_step_value;
	t9_c6.path_1 = &t9_c6_path_1[0];
	t9_c6.path_3 = &t9_c6_path_3[0];
	t9_c6.mod_value = t9_c6_mod_value;
	t9_c6.value = t9_c6_value;
	t9_c6.list_type = &t9_c6_list_type[0];
	t9_c6.max_value = t9_c6_max_value;
	t9_c6.y = t9_c6_y;
	t9_c6.x = t9_c6_x;
	t9_c6.icon = &t9_c6_icon[0];
	t9_c6.mod_source = t9_c6_mod_source;
	t9_c6.mod_invert = t9_c6_mod_invert;
	t10.menu_name = &t10_menu_name[0];
	t10.index = t10_index;
	t10.wallpaper = &t10_wallpaper[0];
	t10.description = &t10_description[0];
	t10.controls_count = t10_controls_count;
	t10.controls = &t10_controls[0];
	t10_c1.key = &t10_c1_key[0];
	t10_c1.data_type = &t10_c1_data_type[0];
	t10_c1.cc = t10_c1_cc;
	t10_c1.text = &t10_c1_text[0];
	t10_c1.path_4 = &t10_c1_path_4[0];
	t10_c1.min_value = t10_c1_min_value;
	t10_c1.path_2 = &t10_c1_path_2[0];
	t10_c1.mod_gain = t10_c1_mod_gain;
	t10_c1.step_value = t10_c1_step_value;
	t10_c1.path_1 = &t10_c1_path_1[0];
	t10_c1.path_3 = &t10_c1_path_3[0];
	t10_c1.mod_value = t10_c1_mod_value;
	t10_c1.value = t10_c1_value;
	t10_c1.list_type = &t10_c1_list_type[0];
	t10_c1.max_value = t10_c1_max_value;
	t10_c1.y = t10_c1_y;
	t10_c1.x = t10_c1_x;
	t10_c1.icon = &t10_c1_icon[0];
	t10_c1.mod_source = t10_c1_mod_source;
	t10_c1.mod_invert = t10_c1_mod_invert;
	t10_c2.key = &t10_c2_key[0];
	t10_c2.data_type = &t10_c2_data_type[0];
	t10_c2.cc = t10_c2_cc;
	t10_c2.text = &t10_c2_text[0];
	t10_c2.path_4 = &t10_c2_path_4[0];
	t10_c2.min_value = t10_c2_min_value;
	t10_c2.path_2 = &t10_c2_path_2[0];
	t10_c2.mod_gain = t10_c2_mod_gain;
	t10_c2.step_value = t10_c2_step_value;
	t10_c2.path_1 = &t10_c2_path_1[0];
	t10_c2.path_3 = &t10_c2_path_3[0];
	t10_c2.mod_value = t10_c2_mod_value;
	t10_c2.value = t10_c2_value;
	t10_c2.list_type = &t10_c2_list_type[0];
	t10_c2.max_value = t10_c2_max_value;
	t10_c2.y = t10_c2_y;
	t10_c2.x = t10_c2_x;
	t10_c2.icon = &t10_c2_icon[0];
	t10_c2.mod_source = t10_c2_mod_source;
	t10_c2.mod_invert = t10_c2_mod_invert;
	t10_c3.key = &t10_c3_key[0];
	t10_c3.data_type = &t10_c3_data_type[0];
	t10_c3.cc = t10_c3_cc;
	t10_c3.text = &t10_c3_text[0];
	t10_c3.path_4 = &t10_c3_path_4[0];
	t10_c3.min_value = t10_c3_min_value;
	t10_c3.path_2 = &t10_c3_path_2[0];
	t10_c3.mod_gain = t10_c3_mod_gain;
	t10_c3.step_value = t10_c3_step_value;
	t10_c3.path_1 = &t10_c3_path_1[0];
	t10_c3.path_3 = &t10_c3_path_3[0];
	t10_c3.mod_value = t10_c3_mod_value;
	t10_c3.value = t10_c3_value;
	t10_c3.list_type = &t10_c3_list_type[0];
	t10_c3.max_value = t10_c3_max_value;
	t10_c3.y = t10_c3_y;
	t10_c3.x = t10_c3_x;
	t10_c3.icon = &t10_c3_icon[0];
	t10_c3.mod_source = t10_c3_mod_source;
	t10_c3.mod_invert = t10_c3_mod_invert;
	t10_c4.key = &t10_c4_key[0];
	t10_c4.data_type = &t10_c4_data_type[0];
	t10_c4.cc = t10_c4_cc;
	t10_c4.text = &t10_c4_text[0];
	t10_c4.path_4 = &t10_c4_path_4[0];
	t10_c4.min_value = t10_c4_min_value;
	t10_c4.path_2 = &t10_c4_path_2[0];
	t10_c4.mod_gain = t10_c4_mod_gain;
	t10_c4.step_value = t10_c4_step_value;
	t10_c4.path_1 = &t10_c4_path_1[0];
	t10_c4.path_3 = &t10_c4_path_3[0];
	t10_c4.mod_value = t10_c4_mod_value;
	t10_c4.value = t10_c4_value;
	t10_c4.list_type = &t10_c4_list_type[0];
	t10_c4.max_value = t10_c4_max_value;
	t10_c4.y = t10_c4_y;
	t10_c4.x = t10_c4_x;
	t10_c4.icon = &t10_c4_icon[0];
	t10_c4.mod_source = t10_c4_mod_source;
	t10_c4.mod_invert = t10_c4_mod_invert;
	t10_c5.key = &t10_c5_key[0];
	t10_c5.data_type = &t10_c5_data_type[0];
	t10_c5.cc = t10_c5_cc;
	t10_c5.text = &t10_c5_text[0];
	t10_c5.path_4 = &t10_c5_path_4[0];
	t10_c5.min_value = t10_c5_min_value;
	t10_c5.path_2 = &t10_c5_path_2[0];
	t10_c5.mod_gain = t10_c5_mod_gain;
	t10_c5.step_value = t10_c5_step_value;
	t10_c5.path_1 = &t10_c5_path_1[0];
	t10_c5.path_3 = &t10_c5_path_3[0];
	t10_c5.mod_value = t10_c5_mod_value;
	t10_c5.value = t10_c5_value;
	t10_c5.list_type = &t10_c5_list_type[0];
	t10_c5.max_value = t10_c5_max_value;
	t10_c5.y = t10_c5_y;
	t10_c5.x = t10_c5_x;
	t10_c5.icon = &t10_c5_icon[0];
	t10_c5.mod_source = t10_c5_mod_source;
	t10_c5.mod_invert = t10_c5_mod_invert;
	t10_c6.key = &t10_c6_key[0];
	t10_c6.data_type = &t10_c6_data_type[0];
	t10_c6.cc = t10_c6_cc;
	t10_c6.text = &t10_c6_text[0];
	t10_c6.path_4 = &t10_c6_path_4[0];
	t10_c6.min_value = t10_c6_min_value;
	t10_c6.path_2 = &t10_c6_path_2[0];
	t10_c6.mod_gain = t10_c6_mod_gain;
	t10_c6.step_value = t10_c6_step_value;
	t10_c6.path_1 = &t10_c6_path_1[0];
	t10_c6.path_3 = &t10_c6_path_3[0];
	t10_c6.mod_value = t10_c6_mod_value;
	t10_c6.value = t10_c6_value;
	t10_c6.list_type = &t10_c6_list_type[0];
	t10_c6.max_value = t10_c6_max_value;
	t10_c6.y = t10_c6_y;
	t10_c6.x = t10_c6_x;
	t10_c6.icon = &t10_c6_icon[0];
	t10_c6.mod_source = t10_c6_mod_source;
	t10_c6.mod_invert = t10_c6_mod_invert;
	t11.menu_name = &t11_menu_name[0];
	t11.index = t11_index;
	t11.wallpaper = &t11_wallpaper[0];
	t11.description = &t11_description[0];
	t11.controls_count = t11_controls_count;
	t11.controls = &t11_controls[0];
	t11_c1.key = &t11_c1_key[0];
	t11_c1.data_type = &t11_c1_data_type[0];
	t11_c1.cc = t11_c1_cc;
	t11_c1.text = &t11_c1_text[0];
	t11_c1.path_4 = &t11_c1_path_4[0];
	t11_c1.min_value = t11_c1_min_value;
	t11_c1.path_2 = &t11_c1_path_2[0];
	t11_c1.mod_gain = t11_c1_mod_gain;
	t11_c1.step_value = t11_c1_step_value;
	t11_c1.path_1 = &t11_c1_path_1[0];
	t11_c1.path_3 = &t11_c1_path_3[0];
	t11_c1.mod_value = t11_c1_mod_value;
	t11_c1.value = t11_c1_value;
	t11_c1.list_type = &t11_c1_list_type[0];
	t11_c1.max_value = t11_c1_max_value;
	t11_c1.y = t11_c1_y;
	t11_c1.x = t11_c1_x;
	t11_c1.icon = &t11_c1_icon[0];
	t11_c1.mod_source = t11_c1_mod_source;
	t11_c1.mod_invert = t11_c1_mod_invert;
	t11_c2.key = &t11_c2_key[0];
	t11_c2.data_type = &t11_c2_data_type[0];
	t11_c2.cc = t11_c2_cc;
	t11_c2.text = &t11_c2_text[0];
	t11_c2.path_4 = &t11_c2_path_4[0];
	t11_c2.min_value = t11_c2_min_value;
	t11_c2.path_2 = &t11_c2_path_2[0];
	t11_c2.mod_gain = t11_c2_mod_gain;
	t11_c2.step_value = t11_c2_step_value;
	t11_c2.path_1 = &t11_c2_path_1[0];
	t11_c2.path_3 = &t11_c2_path_3[0];
	t11_c2.mod_value = t11_c2_mod_value;
	t11_c2.value = t11_c2_value;
	t11_c2.list_type = &t11_c2_list_type[0];
	t11_c2.max_value = t11_c2_max_value;
	t11_c2.y = t11_c2_y;
	t11_c2.x = t11_c2_x;
	t11_c2.icon = &t11_c2_icon[0];
	t11_c2.mod_source = t11_c2_mod_source;
	t11_c2.mod_invert = t11_c2_mod_invert;
	t11_c3.key = &t11_c3_key[0];
	t11_c3.data_type = &t11_c3_data_type[0];
	t11_c3.cc = t11_c3_cc;
	t11_c3.text = &t11_c3_text[0];
	t11_c3.path_4 = &t11_c3_path_4[0];
	t11_c3.min_value = t11_c3_min_value;
	t11_c3.path_2 = &t11_c3_path_2[0];
	t11_c3.mod_gain = t11_c3_mod_gain;
	t11_c3.step_value = t11_c3_step_value;
	t11_c3.path_1 = &t11_c3_path_1[0];
	t11_c3.path_3 = &t11_c3_path_3[0];
	t11_c3.mod_value = t11_c3_mod_value;
	t11_c3.value = t11_c3_value;
	t11_c3.list_type = &t11_c3_list_type[0];
	t11_c3.max_value = t11_c3_max_value;
	t11_c3.y = t11_c3_y;
	t11_c3.x = t11_c3_x;
	t11_c3.icon = &t11_c3_icon[0];
	t11_c3.mod_source = t11_c3_mod_source;
	t11_c3.mod_invert = t11_c3_mod_invert;
	t11_c4.key = &t11_c4_key[0];
	t11_c4.data_type = &t11_c4_data_type[0];
	t11_c4.cc = t11_c4_cc;
	t11_c4.text = &t11_c4_text[0];
	t11_c4.path_4 = &t11_c4_path_4[0];
	t11_c4.min_value = t11_c4_min_value;
	t11_c4.path_2 = &t11_c4_path_2[0];
	t11_c4.mod_gain = t11_c4_mod_gain;
	t11_c4.step_value = t11_c4_step_value;
	t11_c4.path_1 = &t11_c4_path_1[0];
	t11_c4.path_3 = &t11_c4_path_3[0];
	t11_c4.mod_value = t11_c4_mod_value;
	t11_c4.value = t11_c4_value;
	t11_c4.list_type = &t11_c4_list_type[0];
	t11_c4.max_value = t11_c4_max_value;
	t11_c4.y = t11_c4_y;
	t11_c4.x = t11_c4_x;
	t11_c4.icon = &t11_c4_icon[0];
	t11_c4.mod_source = t11_c4_mod_source;
	t11_c4.mod_invert = t11_c4_mod_invert;
	t11_c5.key = &t11_c5_key[0];
	t11_c5.data_type = &t11_c5_data_type[0];
	t11_c5.cc = t11_c5_cc;
	t11_c5.text = &t11_c5_text[0];
	t11_c5.path_4 = &t11_c5_path_4[0];
	t11_c5.min_value = t11_c5_min_value;
	t11_c5.path_2 = &t11_c5_path_2[0];
	t11_c5.mod_gain = t11_c5_mod_gain;
	t11_c5.step_value = t11_c5_step_value;
	t11_c5.path_1 = &t11_c5_path_1[0];
	t11_c5.path_3 = &t11_c5_path_3[0];
	t11_c5.mod_value = t11_c5_mod_value;
	t11_c5.value = t11_c5_value;
	t11_c5.list_type = &t11_c5_list_type[0];
	t11_c5.max_value = t11_c5_max_value;
	t11_c5.y = t11_c5_y;
	t11_c5.x = t11_c5_x;
	t11_c5.icon = &t11_c5_icon[0];
	t11_c5.mod_source = t11_c5_mod_source;
	t11_c5.mod_invert = t11_c5_mod_invert;
	t11_c6.key = &t11_c6_key[0];
	t11_c6.data_type = &t11_c6_data_type[0];
	t11_c6.cc = t11_c6_cc;
	t11_c6.text = &t11_c6_text[0];
	t11_c6.path_4 = &t11_c6_path_4[0];
	t11_c6.min_value = t11_c6_min_value;
	t11_c6.path_2 = &t11_c6_path_2[0];
	t11_c6.mod_gain = t11_c6_mod_gain;
	t11_c6.step_value = t11_c6_step_value;
	t11_c6.path_1 = &t11_c6_path_1[0];
	t11_c6.path_3 = &t11_c6_path_3[0];
	t11_c6.mod_value = t11_c6_mod_value;
	t11_c6.value = t11_c6_value;
	t11_c6.list_type = &t11_c6_list_type[0];
	t11_c6.max_value = t11_c6_max_value;
	t11_c6.y = t11_c6_y;
	t11_c6.x = t11_c6_x;
	t11_c6.icon = &t11_c6_icon[0];
	t11_c6.mod_source = t11_c6_mod_source;
	t11_c6.mod_invert = t11_c6_mod_invert;
	t12.menu_name = &t12_menu_name[0];
	t12.index = t12_index;
	t12.wallpaper = &t12_wallpaper[0];
	t12.description = &t12_description[0];
	t12.controls_count = t12_controls_count;
	t12.controls = &t12_controls[0];
	t12_c1.key = &t12_c1_key[0];
	t12_c1.data_type = &t12_c1_data_type[0];
	t12_c1.cc = t12_c1_cc;
	t12_c1.text = &t12_c1_text[0];
	t12_c1.path_4 = &t12_c1_path_4[0];
	t12_c1.min_value = t12_c1_min_value;
	t12_c1.path_2 = &t12_c1_path_2[0];
	t12_c1.mod_gain = t12_c1_mod_gain;
	t12_c1.step_value = t12_c1_step_value;
	t12_c1.path_1 = &t12_c1_path_1[0];
	t12_c1.path_3 = &t12_c1_path_3[0];
	t12_c1.mod_value = t12_c1_mod_value;
	t12_c1.value = t12_c1_value;
	t12_c1.list_type = &t12_c1_list_type[0];
	t12_c1.max_value = t12_c1_max_value;
	t12_c1.y = t12_c1_y;
	t12_c1.x = t12_c1_x;
	t12_c1.icon = &t12_c1_icon[0];
	t12_c1.mod_source = t12_c1_mod_source;
	t12_c1.mod_invert = t12_c1_mod_invert;
	t13.menu_name = &t13_menu_name[0];
	t13.index = t13_index;
	t13.wallpaper = &t13_wallpaper[0];
	t13.description = &t13_description[0];
	t13.controls_count = t13_controls_count;
	t13.controls = &t13_controls[0];
	t13_c1.key = &t13_c1_key[0];
	t13_c1.data_type = &t13_c1_data_type[0];
	t13_c1.cc = t13_c1_cc;
	t13_c1.text = &t13_c1_text[0];
	t13_c1.path_4 = &t13_c1_path_4[0];
	t13_c1.min_value = t13_c1_min_value;
	t13_c1.path_2 = &t13_c1_path_2[0];
	t13_c1.mod_gain = t13_c1_mod_gain;
	t13_c1.step_value = t13_c1_step_value;
	t13_c1.path_1 = &t13_c1_path_1[0];
	t13_c1.path_3 = &t13_c1_path_3[0];
	t13_c1.mod_value = t13_c1_mod_value;
	t13_c1.value = t13_c1_value;
	t13_c1.list_type = &t13_c1_list_type[0];
	t13_c1.max_value = t13_c1_max_value;
	t13_c1.y = t13_c1_y;
	t13_c1.x = t13_c1_x;
	t13_c1.icon = &t13_c1_icon[0];
	t13_c1.mod_source = t13_c1_mod_source;
	t13_c1.mod_invert = t13_c1_mod_invert;
	t14.menu_name = &t14_menu_name[0];
	t14.index = t14_index;
	t14.wallpaper = &t14_wallpaper[0];
	t14.description = &t14_description[0];
	t14.controls_count = t14_controls_count;
	t14.controls = &t14_controls[0];
	t14_c1.key = &t14_c1_key[0];
	t14_c1.data_type = &t14_c1_data_type[0];
	t14_c1.cc = t14_c1_cc;
	t14_c1.text = &t14_c1_text[0];
	t14_c1.path_4 = &t14_c1_path_4[0];
	t14_c1.min_value = t14_c1_min_value;
	t14_c1.path_2 = &t14_c1_path_2[0];
	t14_c1.mod_gain = t14_c1_mod_gain;
	t14_c1.step_value = t14_c1_step_value;
	t14_c1.path_1 = &t14_c1_path_1[0];
	t14_c1.path_3 = &t14_c1_path_3[0];
	t14_c1.mod_value = t14_c1_mod_value;
	t14_c1.value = t14_c1_value;
	t14_c1.list_type = &t14_c1_list_type[0];
	t14_c1.max_value = t14_c1_max_value;
	t14_c1.y = t14_c1_y;
	t14_c1.x = t14_c1_x;
	t14_c1.icon = &t14_c1_icon[0];
	t14_c1.mod_source = t14_c1_mod_source;
	t14_c1.mod_invert = t14_c1_mod_invert;
	t14_c2.key = &t14_c2_key[0];
	t14_c2.data_type = &t14_c2_data_type[0];
	t14_c2.cc = t14_c2_cc;
	t14_c2.text = &t14_c2_text[0];
	t14_c2.path_4 = &t14_c2_path_4[0];
	t14_c2.min_value = t14_c2_min_value;
	t14_c2.path_2 = &t14_c2_path_2[0];
	t14_c2.mod_gain = t14_c2_mod_gain;
	t14_c2.step_value = t14_c2_step_value;
	t14_c2.path_1 = &t14_c2_path_1[0];
	t14_c2.path_3 = &t14_c2_path_3[0];
	t14_c2.mod_value = t14_c2_mod_value;
	t14_c2.value = t14_c2_value;
	t14_c2.list_type = &t14_c2_list_type[0];
	t14_c2.max_value = t14_c2_max_value;
	t14_c2.y = t14_c2_y;
	t14_c2.x = t14_c2_x;
	t14_c2.icon = &t14_c2_icon[0];
	t14_c2.mod_source = t14_c2_mod_source;
	t14_c2.mod_invert = t14_c2_mod_invert;
	t14_c3.key = &t14_c3_key[0];
	t14_c3.data_type = &t14_c3_data_type[0];
	t14_c3.cc = t14_c3_cc;
	t14_c3.text = &t14_c3_text[0];
	t14_c3.path_4 = &t14_c3_path_4[0];
	t14_c3.min_value = t14_c3_min_value;
	t14_c3.path_2 = &t14_c3_path_2[0];
	t14_c3.mod_gain = t14_c3_mod_gain;
	t14_c3.step_value = t14_c3_step_value;
	t14_c3.path_1 = &t14_c3_path_1[0];
	t14_c3.path_3 = &t14_c3_path_3[0];
	t14_c3.mod_value = t14_c3_mod_value;
	t14_c3.value = t14_c3_value;
	t14_c3.list_type = &t14_c3_list_type[0];
	t14_c3.max_value = t14_c3_max_value;
	t14_c3.y = t14_c3_y;
	t14_c3.x = t14_c3_x;
	t14_c3.icon = &t14_c3_icon[0];
	t14_c3.mod_source = t14_c3_mod_source;
	t14_c3.mod_invert = t14_c3_mod_invert;
	t14_c4.key = &t14_c4_key[0];
	t14_c4.data_type = &t14_c4_data_type[0];
	t14_c4.cc = t14_c4_cc;
	t14_c4.text = &t14_c4_text[0];
	t14_c4.path_4 = &t14_c4_path_4[0];
	t14_c4.min_value = t14_c4_min_value;
	t14_c4.path_2 = &t14_c4_path_2[0];
	t14_c4.mod_gain = t14_c4_mod_gain;
	t14_c4.step_value = t14_c4_step_value;
	t14_c4.path_1 = &t14_c4_path_1[0];
	t14_c4.path_3 = &t14_c4_path_3[0];
	t14_c4.mod_value = t14_c4_mod_value;
	t14_c4.value = t14_c4_value;
	t14_c4.list_type = &t14_c4_list_type[0];
	t14_c4.max_value = t14_c4_max_value;
	t14_c4.y = t14_c4_y;
	t14_c4.x = t14_c4_x;
	t14_c4.icon = &t14_c4_icon[0];
	t14_c4.mod_source = t14_c4_mod_source;
	t14_c4.mod_invert = t14_c4_mod_invert;
	t14_c5.key = &t14_c5_key[0];
	t14_c5.data_type = &t14_c5_data_type[0];
	t14_c5.cc = t14_c5_cc;
	t14_c5.text = &t14_c5_text[0];
	t14_c5.path_4 = &t14_c5_path_4[0];
	t14_c5.min_value = t14_c5_min_value;
	t14_c5.path_2 = &t14_c5_path_2[0];
	t14_c5.mod_gain = t14_c5_mod_gain;
	t14_c5.step_value = t14_c5_step_value;
	t14_c5.path_1 = &t14_c5_path_1[0];
	t14_c5.path_3 = &t14_c5_path_3[0];
	t14_c5.mod_value = t14_c5_mod_value;
	t14_c5.value = t14_c5_value;
	t14_c5.list_type = &t14_c5_list_type[0];
	t14_c5.max_value = t14_c5_max_value;
	t14_c5.y = t14_c5_y;
	t14_c5.x = t14_c5_x;
	t14_c5.icon = &t14_c5_icon[0];
	t14_c5.mod_source = t14_c5_mod_source;
	t14_c5.mod_invert = t14_c5_mod_invert;
	t14_c6.key = &t14_c6_key[0];
	t14_c6.data_type = &t14_c6_data_type[0];
	t14_c6.cc = t14_c6_cc;
	t14_c6.text = &t14_c6_text[0];
	t14_c6.path_4 = &t14_c6_path_4[0];
	t14_c6.min_value = t14_c6_min_value;
	t14_c6.path_2 = &t14_c6_path_2[0];
	t14_c6.mod_gain = t14_c6_mod_gain;
	t14_c6.step_value = t14_c6_step_value;
	t14_c6.path_1 = &t14_c6_path_1[0];
	t14_c6.path_3 = &t14_c6_path_3[0];
	t14_c6.mod_value = t14_c6_mod_value;
	t14_c6.value = t14_c6_value;
	t14_c6.list_type = &t14_c6_list_type[0];
	t14_c6.max_value = t14_c6_max_value;
	t14_c6.y = t14_c6_y;
	t14_c6.x = t14_c6_x;
	t14_c6.icon = &t14_c6_icon[0];
	t14_c6.mod_source = t14_c6_mod_source;
	t14_c6.mod_invert = t14_c6_mod_invert;
	t15.menu_name = &t15_menu_name[0];
	t15.index = t15_index;
	t15.wallpaper = &t15_wallpaper[0];
	t15.description = &t15_description[0];
	t15.controls_count = t15_controls_count;
	t15.controls = &t15_controls[0];
	t15_c1.key = &t15_c1_key[0];
	t15_c1.data_type = &t15_c1_data_type[0];
	t15_c1.cc = t15_c1_cc;
	t15_c1.text = &t15_c1_text[0];
	t15_c1.path_4 = &t15_c1_path_4[0];
	t15_c1.min_value = t15_c1_min_value;
	t15_c1.path_2 = &t15_c1_path_2[0];
	t15_c1.mod_gain = t15_c1_mod_gain;
	t15_c1.step_value = t15_c1_step_value;
	t15_c1.path_1 = &t15_c1_path_1[0];
	t15_c1.path_3 = &t15_c1_path_3[0];
	t15_c1.mod_value = t15_c1_mod_value;
	t15_c1.value = t15_c1_value;
	t15_c1.list_type = &t15_c1_list_type[0];
	t15_c1.max_value = t15_c1_max_value;
	t15_c1.y = t15_c1_y;
	t15_c1.x = t15_c1_x;
	t15_c1.icon = &t15_c1_icon[0];
	t15_c1.mod_source = t15_c1_mod_source;
	t15_c1.mod_invert = t15_c1_mod_invert;
	t16.menu_name = &t16_menu_name[0];
	t16.index = t16_index;
	t16.wallpaper = &t16_wallpaper[0];
	t16.description = &t16_description[0];
	t16.controls_count = t16_controls_count;
	t16.controls = &t16_controls[0];
	t16_c1.key = &t16_c1_key[0];
	t16_c1.data_type = &t16_c1_data_type[0];
	t16_c1.cc = t16_c1_cc;
	t16_c1.text = &t16_c1_text[0];
	t16_c1.path_4 = &t16_c1_path_4[0];
	t16_c1.min_value = t16_c1_min_value;
	t16_c1.path_2 = &t16_c1_path_2[0];
	t16_c1.mod_gain = t16_c1_mod_gain;
	t16_c1.step_value = t16_c1_step_value;
	t16_c1.path_1 = &t16_c1_path_1[0];
	t16_c1.path_3 = &t16_c1_path_3[0];
	t16_c1.mod_value = t16_c1_mod_value;
	t16_c1.value = t16_c1_value;
	t16_c1.list_type = &t16_c1_list_type[0];
	t16_c1.max_value = t16_c1_max_value;
	t16_c1.y = t16_c1_y;
	t16_c1.x = t16_c1_x;
	t16_c1.icon = &t16_c1_icon[0];
	t16_c1.mod_source = t16_c1_mod_source;
	t16_c1.mod_invert = t16_c1_mod_invert;
	t17.menu_name = &t17_menu_name[0];
	t17.index = t17_index;
	t17.wallpaper = &t17_wallpaper[0];
	t17.description = &t17_description[0];
	t17.controls_count = t17_controls_count;
	t17.controls = &t17_controls[0];
	t17_c1.key = &t17_c1_key[0];
	t17_c1.data_type = &t17_c1_data_type[0];
	t17_c1.cc = t17_c1_cc;
	t17_c1.text = &t17_c1_text[0];
	t17_c1.path_4 = &t17_c1_path_4[0];
	t17_c1.min_value = t17_c1_min_value;
	t17_c1.path_2 = &t17_c1_path_2[0];
	t17_c1.mod_gain = t17_c1_mod_gain;
	t17_c1.step_value = t17_c1_step_value;
	t17_c1.path_1 = &t17_c1_path_1[0];
	t17_c1.path_3 = &t17_c1_path_3[0];
	t17_c1.mod_value = t17_c1_mod_value;
	t17_c1.value = t17_c1_value;
	t17_c1.list_type = &t17_c1_list_type[0];
	t17_c1.max_value = t17_c1_max_value;
	t17_c1.y = t17_c1_y;
	t17_c1.x = t17_c1_x;
	t17_c1.icon = &t17_c1_icon[0];
	t17_c1.mod_source = t17_c1_mod_source;
	t17_c1.mod_invert = t17_c1_mod_invert;
	t17_c2.key = &t17_c2_key[0];
	t17_c2.data_type = &t17_c2_data_type[0];
	t17_c2.cc = t17_c2_cc;
	t17_c2.text = &t17_c2_text[0];
	t17_c2.path_4 = &t17_c2_path_4[0];
	t17_c2.min_value = t17_c2_min_value;
	t17_c2.path_2 = &t17_c2_path_2[0];
	t17_c2.mod_gain = t17_c2_mod_gain;
	t17_c2.step_value = t17_c2_step_value;
	t17_c2.path_1 = &t17_c2_path_1[0];
	t17_c2.path_3 = &t17_c2_path_3[0];
	t17_c2.mod_value = t17_c2_mod_value;
	t17_c2.value = t17_c2_value;
	t17_c2.list_type = &t17_c2_list_type[0];
	t17_c2.max_value = t17_c2_max_value;
	t17_c2.y = t17_c2_y;
	t17_c2.x = t17_c2_x;
	t17_c2.icon = &t17_c2_icon[0];
	t17_c2.mod_source = t17_c2_mod_source;
	t17_c2.mod_invert = t17_c2_mod_invert;
	t17_c3.key = &t17_c3_key[0];
	t17_c3.data_type = &t17_c3_data_type[0];
	t17_c3.cc = t17_c3_cc;
	t17_c3.text = &t17_c3_text[0];
	t17_c3.path_4 = &t17_c3_path_4[0];
	t17_c3.min_value = t17_c3_min_value;
	t17_c3.path_2 = &t17_c3_path_2[0];
	t17_c3.mod_gain = t17_c3_mod_gain;
	t17_c3.step_value = t17_c3_step_value;
	t17_c3.path_1 = &t17_c3_path_1[0];
	t17_c3.path_3 = &t17_c3_path_3[0];
	t17_c3.mod_value = t17_c3_mod_value;
	t17_c3.value = t17_c3_value;
	t17_c3.list_type = &t17_c3_list_type[0];
	t17_c3.max_value = t17_c3_max_value;
	t17_c3.y = t17_c3_y;
	t17_c3.x = t17_c3_x;
	t17_c3.icon = &t17_c3_icon[0];
	t17_c3.mod_source = t17_c3_mod_source;
	t17_c3.mod_invert = t17_c3_mod_invert;
	t17_c4.key = &t17_c4_key[0];
	t17_c4.data_type = &t17_c4_data_type[0];
	t17_c4.cc = t17_c4_cc;
	t17_c4.text = &t17_c4_text[0];
	t17_c4.path_4 = &t17_c4_path_4[0];
	t17_c4.min_value = t17_c4_min_value;
	t17_c4.path_2 = &t17_c4_path_2[0];
	t17_c4.mod_gain = t17_c4_mod_gain;
	t17_c4.step_value = t17_c4_step_value;
	t17_c4.path_1 = &t17_c4_path_1[0];
	t17_c4.path_3 = &t17_c4_path_3[0];
	t17_c4.mod_value = t17_c4_mod_value;
	t17_c4.value = t17_c4_value;
	t17_c4.list_type = &t17_c4_list_type[0];
	t17_c4.max_value = t17_c4_max_value;
	t17_c4.y = t17_c4_y;
	t17_c4.x = t17_c4_x;
	t17_c4.icon = &t17_c4_icon[0];
	t17_c4.mod_source = t17_c4_mod_source;
	t17_c4.mod_invert = t17_c4_mod_invert;
	t17_c5.key = &t17_c5_key[0];
	t17_c5.data_type = &t17_c5_data_type[0];
	t17_c5.cc = t17_c5_cc;
	t17_c5.text = &t17_c5_text[0];
	t17_c5.path_4 = &t17_c5_path_4[0];
	t17_c5.min_value = t17_c5_min_value;
	t17_c5.path_2 = &t17_c5_path_2[0];
	t17_c5.mod_gain = t17_c5_mod_gain;
	t17_c5.step_value = t17_c5_step_value;
	t17_c5.path_1 = &t17_c5_path_1[0];
	t17_c5.path_3 = &t17_c5_path_3[0];
	t17_c5.mod_value = t17_c5_mod_value;
	t17_c5.value = t17_c5_value;
	t17_c5.list_type = &t17_c5_list_type[0];
	t17_c5.max_value = t17_c5_max_value;
	t17_c5.y = t17_c5_y;
	t17_c5.x = t17_c5_x;
	t17_c5.icon = &t17_c5_icon[0];
	t17_c5.mod_source = t17_c5_mod_source;
	t17_c5.mod_invert = t17_c5_mod_invert;
	t17_c6.key = &t17_c6_key[0];
	t17_c6.data_type = &t17_c6_data_type[0];
	t17_c6.cc = t17_c6_cc;
	t17_c6.text = &t17_c6_text[0];
	t17_c6.path_4 = &t17_c6_path_4[0];
	t17_c6.min_value = t17_c6_min_value;
	t17_c6.path_2 = &t17_c6_path_2[0];
	t17_c6.mod_gain = t17_c6_mod_gain;
	t17_c6.step_value = t17_c6_step_value;
	t17_c6.path_1 = &t17_c6_path_1[0];
	t17_c6.path_3 = &t17_c6_path_3[0];
	t17_c6.mod_value = t17_c6_mod_value;
	t17_c6.value = t17_c6_value;
	t17_c6.list_type = &t17_c6_list_type[0];
	t17_c6.max_value = t17_c6_max_value;
	t17_c6.y = t17_c6_y;
	t17_c6.x = t17_c6_x;
	t17_c6.icon = &t17_c6_icon[0];
	t17_c6.mod_source = t17_c6_mod_source;
	t17_c6.mod_invert = t17_c6_mod_invert;
	t17_c7.key = &t17_c7_key[0];
	t17_c7.data_type = &t17_c7_data_type[0];
	t17_c7.cc = t17_c7_cc;
	t17_c7.text = &t17_c7_text[0];
	t17_c7.path_4 = &t17_c7_path_4[0];
	t17_c7.min_value = t17_c7_min_value;
	t17_c7.path_2 = &t17_c7_path_2[0];
	t17_c7.mod_gain = t17_c7_mod_gain;
	t17_c7.step_value = t17_c7_step_value;
	t17_c7.path_1 = &t17_c7_path_1[0];
	t17_c7.path_3 = &t17_c7_path_3[0];
	t17_c7.mod_value = t17_c7_mod_value;
	t17_c7.value = t17_c7_value;
	t17_c7.list_type = &t17_c7_list_type[0];
	t17_c7.max_value = t17_c7_max_value;
	t17_c7.y = t17_c7_y;
	t17_c7.x = t17_c7_x;
	t17_c7.icon = &t17_c7_icon[0];
	t17_c7.mod_source = t17_c7_mod_source;
	t17_c7.mod_invert = t17_c7_mod_invert;
	t17_c8.key = &t17_c8_key[0];
	t17_c8.data_type = &t17_c8_data_type[0];
	t17_c8.cc = t17_c8_cc;
	t17_c8.text = &t17_c8_text[0];
	t17_c8.path_4 = &t17_c8_path_4[0];
	t17_c8.min_value = t17_c8_min_value;
	t17_c8.path_2 = &t17_c8_path_2[0];
	t17_c8.mod_gain = t17_c8_mod_gain;
	t17_c8.step_value = t17_c8_step_value;
	t17_c8.path_1 = &t17_c8_path_1[0];
	t17_c8.path_3 = &t17_c8_path_3[0];
	t17_c8.mod_value = t17_c8_mod_value;
	t17_c8.value = t17_c8_value;
	t17_c8.list_type = &t17_c8_list_type[0];
	t17_c8.max_value = t17_c8_max_value;
	t17_c8.y = t17_c8_y;
	t17_c8.x = t17_c8_x;
	t17_c8.icon = &t17_c8_icon[0];
	t17_c8.mod_source = t17_c8_mod_source;
	t17_c8.mod_invert = t17_c8_mod_invert;
	t17_c9.key = &t17_c9_key[0];
	t17_c9.data_type = &t17_c9_data_type[0];
	t17_c9.cc = t17_c9_cc;
	t17_c9.text = &t17_c9_text[0];
	t17_c9.path_4 = &t17_c9_path_4[0];
	t17_c9.min_value = t17_c9_min_value;
	t17_c9.path_2 = &t17_c9_path_2[0];
	t17_c9.mod_gain = t17_c9_mod_gain;
	t17_c9.step_value = t17_c9_step_value;
	t17_c9.path_1 = &t17_c9_path_1[0];
	t17_c9.path_3 = &t17_c9_path_3[0];
	t17_c9.mod_value = t17_c9_mod_value;
	t17_c9.value = t17_c9_value;
	t17_c9.list_type = &t17_c9_list_type[0];
	t17_c9.max_value = t17_c9_max_value;
	t17_c9.y = t17_c9_y;
	t17_c9.x = t17_c9_x;
	t17_c9.icon = &t17_c9_icon[0];
	t17_c9.mod_source = t17_c9_mod_source;
	t17_c9.mod_invert = t17_c9_mod_invert;
	t18.menu_name = &t18_menu_name[0];
	t18.index = t18_index;
	t18.wallpaper = &t18_wallpaper[0];
	t18.description = &t18_description[0];
	t18.controls_count = t18_controls_count;
	t18.controls = &t18_controls[0];
	t18_c1.key = &t18_c1_key[0];
	t18_c1.data_type = &t18_c1_data_type[0];
	t18_c1.cc = t18_c1_cc;
	t18_c1.text = &t18_c1_text[0];
	t18_c1.path_4 = &t18_c1_path_4[0];
	t18_c1.min_value = t18_c1_min_value;
	t18_c1.path_2 = &t18_c1_path_2[0];
	t18_c1.mod_gain = t18_c1_mod_gain;
	t18_c1.step_value = t18_c1_step_value;
	t18_c1.path_1 = &t18_c1_path_1[0];
	t18_c1.path_3 = &t18_c1_path_3[0];
	t18_c1.mod_value = t18_c1_mod_value;
	t18_c1.value = t18_c1_value;
	t18_c1.list_type = &t18_c1_list_type[0];
	t18_c1.max_value = t18_c1_max_value;
	t18_c1.y = t18_c1_y;
	t18_c1.x = t18_c1_x;
	t18_c1.icon = &t18_c1_icon[0];
	t18_c1.mod_source = t18_c1_mod_source;
	t18_c1.mod_invert = t18_c1_mod_invert;
	t19.menu_name = &t19_menu_name[0];
	t19.index = t19_index;
	t19.wallpaper = &t19_wallpaper[0];
	t19.description = &t19_description[0];
	t19.controls_count = t19_controls_count;
	t19.controls = &t19_controls[0];
	t20.menu_name = &t20_menu_name[0];
	t20.index = t20_index;
	t20.wallpaper = &t20_wallpaper[0];
	t20.description = &t20_description[0];
	t20.controls_count = t20_controls_count;
	t20.controls = &t20_controls[0];
}
